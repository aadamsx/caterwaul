caterwaul.module( 'std.seq' ,function($) { (function( ) {var anon=$.anonymizer( 'S' ) ,rule=function(p,e) {;
return $.rereplacer(anon(p) ,anon(e) ) } ,operator_macros= (function( ) {var loop_anon=$.anonymizer( 'x' , 'y' , 'i' , 'j' , 'l' , 'lj' , 'r' , 'o' , 'k' ) ,scope=anon(ref_h_lI0RQCId5TmGAuaYsayKZD) ,scoped=function( /* unary , node */t) {;
return scope.replace( {_body:t} ) } ,form=function( /* unary , node */x) {;
return loop_anon( /* unary , node */scoped( /* unary , node */anon( /* unary , node */x) ) ) } ,map=form(ref_i_lI0RQCId5TmGAuaYsayKZD) ,each=form(ref_j_lI0RQCId5TmGAuaYsayKZD) ,flatmap=form(ref_k_lI0RQCId5TmGAuaYsayKZD) ,iterate=form(ref_l_lI0RQCId5TmGAuaYsayKZD) ,filter=form(ref_m_lI0RQCId5TmGAuaYsayKZD) ,filter_not=form(ref_n_lI0RQCId5TmGAuaYsayKZD) ,map_filter=form(ref_o_lI0RQCId5TmGAuaYsayKZD) ,imap_filter=form(ref_p_lI0RQCId5TmGAuaYsayKZD) ,foldl=form(ref_q_lI0RQCId5TmGAuaYsayKZD) ,foldr=form(ref_r_lI0RQCId5TmGAuaYsayKZD) ,unfold=form(ref_s_lI0RQCId5TmGAuaYsayKZD) ,ifoldl=form(ref_t_lI0RQCId5TmGAuaYsayKZD) ,ifoldr=form(ref_u_lI0RQCId5TmGAuaYsayKZD) ,iunfold=form(ref_v_lI0RQCId5TmGAuaYsayKZD) ,exists=form(ref_w_lI0RQCId5TmGAuaYsayKZD) ,not_exists=form(ref_x_lI0RQCId5TmGAuaYsayKZD) ,concat=anon(ref_y_lI0RQCId5TmGAuaYsayKZD) ,zip=form(ref_z_lI0RQCId5TmGAuaYsayKZD) ,cross=form(ref_10_lI0RQCId5TmGAuaYsayKZD) ,kmap=form(ref_11_lI0RQCId5TmGAuaYsayKZD) ,keach=form(ref_12_lI0RQCId5TmGAuaYsayKZD) ,kfilter=form(ref_13_lI0RQCId5TmGAuaYsayKZD) ,kfilter_not=form(ref_14_lI0RQCId5TmGAuaYsayKZD) ,kmap_filter=form(ref_15_lI0RQCId5TmGAuaYsayKZD) ,vmap=form(ref_16_lI0RQCId5TmGAuaYsayKZD) ,veach=form(ref_17_lI0RQCId5TmGAuaYsayKZD) ,vfilter=form(ref_18_lI0RQCId5TmGAuaYsayKZD) ,vfilter_not=form(ref_19_lI0RQCId5TmGAuaYsayKZD) ,vmap_filter=form(ref_1a_lI0RQCId5TmGAuaYsayKZD) ;
return( (function( ) {var unrecognized=function( /* unary , node */reason) {;
return(function( ) {throw new Error(reason) } ) .call(this) } ,use_form=function(form,xs,body,init,vars) {;
return form?form.replace( {_f:body,_init:init} ) .replace($.merge( {_s:xs} ,vars) ) :unrecognized( ( 'unsupported sequence operator or modifiers used on ' + (body) + '' ) ) } ,operator_case=function( /* unary , node */forms) {;
return function( /* unary , node */match) {;
return(function( ) {var xs=match._xs,expander=this,form_function=function( /* unary , node */form) {;
return function(body,vars) {;
return use_form(form,xs,body,null,vars) } } ,iform_function=function( /* unary , node */form) {;
return function(body,init,vars) {;
return use_form(form,xs,body,init,vars) } } ,use=function(form,iform) {;
return function( /* unary , node */body) {;
return parse_body(body,expander,form_function(form) ,iform_function(iform) ) } } ;
return(parse_modifiers(match._thing,use(forms.normal,forms.inormal) ,use(forms.bang,forms.ibang) ,use(forms.tbang,forms.itbang) ) ) } ) .call(this) } } ,handle_map_forms=operator_case( {normal:map,bang:each,tbang:flatmap,itbang:iterate} ) ,handle_filter_forms=operator_case( {normal:filter,bang:filter_not,tbang:map_filter,itbang:imap_filter} ) ,handle_fold_forms=operator_case( {normal:foldl,bang:foldr,tbang:unfold,inormal:ifoldl,ibang:ifoldr,itbang:iunfold} ) ,handle_kmap_forms=operator_case( {normal:kmap,bang:keach} ) ,handle_kfilter_forms=operator_case( {normal:kfilter,bang:kfilter_not,tbang:kmap_filter} ) ,handle_vmap_forms=operator_case( {normal:vmap,bang:veach} ) ,handle_vfilter_forms=operator_case( {normal:vfilter,bang:vfilter_not,tbang:vmap_filter} ) ,handle_exists_forms=operator_case( {normal:exists,bang:not_exists} ) ,block=anon(ref_1b_lI0RQCId5TmGAuaYsayKZD) ,block_with_variable=anon(ref_1c_lI0RQCId5TmGAuaYsayKZD) ,block_with_init=anon(ref_1d_lI0RQCId5TmGAuaYsayKZD) ,block_with_variable_and_init=anon(ref_1e_lI0RQCId5TmGAuaYsayKZD) ,block_with_closure=anon(ref_1f_lI0RQCId5TmGAuaYsayKZD) ,block_with_seq=anon(ref_1g_lI0RQCId5TmGAuaYsayKZD) ,standard_names= {_x: 'x' ,_x0: 'x0' ,_xi: 'xi' ,_xl: 'xl' ,_xs: 'xs' ,_xr: 'xr' } ,prefixed_names=function( /* unary , node */p) {;
return{_x:p,_x0: ( '' + (p) + '0' ) ,_xi: ( '' + (p) + 'i' ) ,_xl: ( '' + (p) + 'l' ) ,_xs: ( '' + (p) + 's' ) ,_xr: ( '' + (p) + 'r' ) } } ,function_promotion=anon(ref_1h_lI0RQCId5TmGAuaYsayKZD) ,promote_function=function( /* unary , node */f) {;
return function_promotion.replace( {_f:f} ) } ,closure_wrapper=anon(ref_1i_lI0RQCId5TmGAuaYsayKZD) ,close_body=function(vars,f) {;
return closure_wrapper.replace(vars) .replace( {_f:f} ) } ,seq_pattern=anon(ref_1j_lI0RQCId5TmGAuaYsayKZD) ,promote_seq=function( /* unary , node */f) {;
return seq_pattern.replace( {_x:f} ) } ,parse_body=function(tree,expand,normal,init) {;
return(function( ) {var in_sequence_context=function( /* unary , node */f) {;
return expand.call(expand,promote_seq(f) ) } ,sequence_context_normal=function(f,names) {;
return normal(in_sequence_context(f) ,names) } ,sequence_context_init=function(f,init_expression,names) {;
return init(in_sequence_context(f) ,init_expression,names) } ,wrapping_normal=function(f,names) {;
return normal(close_body(names,f) ,names) } ,wrapping_init=function(f,init_expression,names) {;
return init(close_body(names,f) ,init_expression,names) } ,r=null;
return( ( (r=block_with_seq.match(tree) ) ?parse_body(r._x,expand,sequence_context_normal,sequence_context_init) : (r=block_with_closure.match(tree) ) ?parse_body(r._x,expand,wrapping_normal,wrapping_init) : (r=block_with_variable_and_init.match(tree) ) ?init(r._x,r._init,prefixed_names(r._var) ) : (r=block_with_init.match(tree) ) ?init(r._x,r._init,standard_names) : (r=block_with_variable.match(tree) ) ?normal(r._x,prefixed_names(r._var) ) : (r=block.match(tree) ) ?normal(r._x,standard_names) :normal(promote_function(tree) ,standard_names) ) ) } ) .call(this) } ,tbang_modifier=anon( '~!_x' ) ,bang_modifier=anon( '!_x' ) ,parse_modifiers=function(tree,normal,bang,tbang) {;
return(function( ) {var result=null;
return( ( (result=tbang_modifier.match(tree) ) ?tbang(result._x) : (result=bang_modifier.match(tree) ) ?bang(result._x) :normal(tree) ) ) } ) .call(this) } ;
return( [rule(ref_1k_lI0RQCId5TmGAuaYsayKZD,ref_1l_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1m_lI0RQCId5TmGAuaYsayKZD,concat) ,rule(ref_1n_lI0RQCId5TmGAuaYsayKZD,zip) ,rule(ref_1o_lI0RQCId5TmGAuaYsayKZD,cross) ,rule(ref_1p_lI0RQCId5TmGAuaYsayKZD,ref_1q_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1r_lI0RQCId5TmGAuaYsayKZD,ref_1s_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1t_lI0RQCId5TmGAuaYsayKZD,ref_1u_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1v_lI0RQCId5TmGAuaYsayKZD,ref_1w_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1x_lI0RQCId5TmGAuaYsayKZD,ref_1y_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_1z_lI0RQCId5TmGAuaYsayKZD,ref_20_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_21_lI0RQCId5TmGAuaYsayKZD,ref_22_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_23_lI0RQCId5TmGAuaYsayKZD,ref_24_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_25_lI0RQCId5TmGAuaYsayKZD,ref_26_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_27_lI0RQCId5TmGAuaYsayKZD,ref_28_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_29_lI0RQCId5TmGAuaYsayKZD,ref_2a_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_2b_lI0RQCId5TmGAuaYsayKZD,ref_2c_lI0RQCId5TmGAuaYsayKZD) ,rule(ref_2d_lI0RQCId5TmGAuaYsayKZD,handle_filter_forms) ,rule(ref_2e_lI0RQCId5TmGAuaYsayKZD,handle_map_forms) ,rule(ref_2f_lI0RQCId5TmGAuaYsayKZD,handle_fold_forms) ,rule(ref_2g_lI0RQCId5TmGAuaYsayKZD,handle_exists_forms) ,rule(ref_2h_lI0RQCId5TmGAuaYsayKZD,handle_kmap_forms) ,rule(ref_2i_lI0RQCId5TmGAuaYsayKZD,handle_vmap_forms) ,rule(ref_2j_lI0RQCId5TmGAuaYsayKZD,handle_kfilter_forms) ,rule(ref_2k_lI0RQCId5TmGAuaYsayKZD,handle_vfilter_forms) ] ) } ) .call(this) ) } ) .call(this) ,word_macros= (function( ) {var n=function( /* unary , node */match) {;
return n_pattern.replace($.merge( {_l: '0' ,_step: '1' } ,match) ) } ,ni=function( /* unary , node */match) {;
return ni_pattern.replace($.merge( {_l: '0' ,_step: '1' } ,match) ) } ,n_pattern=anon(ref_2l_lI0RQCId5TmGAuaYsayKZD) ,ni_pattern=anon(ref_2m_lI0RQCId5TmGAuaYsayKZD) ,scope=anon(ref_2n_lI0RQCId5TmGAuaYsayKZD) ,scoped=function( /* unary , node */t) {;
return scope.replace( {_body:t} ) } ,form=function( /* unary , node */p) {;
return(function( ) {var tree=scoped(anon(p) ) ;
return( (function(match) {return tree.replace(match) } ) ) } ) .call(this) } ,keys=form(ref_2o_lI0RQCId5TmGAuaYsayKZD) ,values=form(ref_2p_lI0RQCId5TmGAuaYsayKZD) ,pairs=form(ref_2q_lI0RQCId5TmGAuaYsayKZD) ,object=form(ref_2r_lI0RQCId5TmGAuaYsayKZD) ,mobject=form(ref_2s_lI0RQCId5TmGAuaYsayKZD) ;
return( [rule(ref_2t_lI0RQCId5TmGAuaYsayKZD,n) ,rule(ref_2u_lI0RQCId5TmGAuaYsayKZD,ni) ,rule(ref_2v_lI0RQCId5TmGAuaYsayKZD,n) ,rule(ref_2w_lI0RQCId5TmGAuaYsayKZD,ni) ,rule(ref_2x_lI0RQCId5TmGAuaYsayKZD,n) ,rule(ref_2y_lI0RQCId5TmGAuaYsayKZD,ni) ,rule(ref_2z_lI0RQCId5TmGAuaYsayKZD,keys) ,rule(ref_30_lI0RQCId5TmGAuaYsayKZD,object) ,rule(ref_31_lI0RQCId5TmGAuaYsayKZD,mobject) ,rule(ref_32_lI0RQCId5TmGAuaYsayKZD,values) ,rule(ref_33_lI0RQCId5TmGAuaYsayKZD,object) ,rule(ref_34_lI0RQCId5TmGAuaYsayKZD,mobject) ,rule(ref_35_lI0RQCId5TmGAuaYsayKZD,pairs) ,rule(ref_36_lI0RQCId5TmGAuaYsayKZD,object) ,rule(ref_37_lI0RQCId5TmGAuaYsayKZD,mobject) ] ) } ) .call(this) ;
return($.seq=function( /* unary , node */caterwaul_function) {;
return(function( ) {var anon_pattern=anon( 'S[_x]' ) ,seq_expand=$($.alternatives(operator_macros.concat(word_macros) ) ) ;
return( (function(it) {return(it.modifiers.seq=function( /* unary , node */match) {;
return(function(it) {return( ( (it) && (this(it) ) ) ) } ) .call(this, (seq_expand.call(seq_expand,anon_pattern.replace( {_x:match._expression} ) ) ) ) } ) ,it} ) .call(this, (caterwaul_function) ) ) } ) .call(this) } ) } ) .call(this) } ) ;
