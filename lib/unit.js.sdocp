sdocp('lib/unit.js.sdoc', 'Unit testing library functions\n\nvar already_failed = false;\nvar on_error = function (name, e) {typeof console === \'undefined\' ?\n                                     print(\'Error at eq count \' + eq_count + \' in test \' + name) :\n                                     console.log(\'Error at eq count \' + eq_count + \' in test \' + name);\n                                   throw new Error(e)};\nvar eq_count = 0;\n\nvar _log = function (message) {};\n\nvar eq = function (x, y, message) {\n  ++eq_count;\n  if (x == y) return true;\n  else        return on_error((message ? message + \': \' : \' (eq \' + eq_count + \')\') + \'\\n\' + x + \'\\n\\n!==\\n\\n\' + y);\n};\n\nvar aeq = function (xs, ys, message) {\n  eq(xs.length, ys.length, xs + \' == \' + ys + \': \' + message + \' (length check)\');\n  for (var i = 0, l = xs.length; i < l; ++i)\n    eq(xs[i], ys[i], message + \' (element check: \' + i + \')\');\n  return true;\n};\n\nvar test = function (name, f) {\n  try {\n    eq_count = 0;\n    f();\n    caterwaul = caterwaul.reinitialize(caterwaul);\n    eq_count = 0;\n    f();\n  } catch (e) {\n    on_error(name, e);\n  }\n};\n');