caterwaul.module( 'regexp-grammar-compiler' , (function(qse,qs,qs1,qs2,qs3,qse1,qse2) {var result= (function($) {$.regexp_grammar=function(rules) {;
return(function() {var parsed_rules= {} ,classes= {} ,visit=function(pair) {;
return(parsed_rules[pair[0] ] =$.regexp(pair[1] , {atom: 'word' } ) ,classes[pair[0] ] =parser_for(parsed_rules[pair[0] ] ) ) } ,flatten=function(t,d) {;
return t.data===d&&t.length>=2? ( [t[0] ] ) .concat(flatten(t[1] ,d) ) : [t] } ,parser_for=function(r) {;
return r.i() ?alternative_parser(flatten(r, '|' ) ) :sequential_parser(flatten(r, ',' ) ) } ,alternative_parser=function(rs) {;
return(qse) .replace( {_r: (function(xs) {var x,x0,xi,xl,xr;
for(var x0= (qs) ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,x0= ( (qs1) .replace( {_x0:x0,_x:x.data} ) ) ;
return x0} ) .call(this,rs) } ) } ,sequential_parser=function(rs) {;
return(qs2) .replace( {_definitions: (function(it) {return it.unflatten() } ) .call(this, ( (function(xs) {var x,x0,xi,xl,xr;
for(var x0= (new $.syntax( ',' ) ) ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,x0= ( (x0) .push(x) ) ;
return x0} ) .call(this, (function(xs) {var x,x0,xi,xl,xr;
for(var xr=new xs.constructor() ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,xr.push( (matcher_for(x,xi) ) ) ;
return xr} ) .call(this,rs) ) ) ) ,_last: ( 's' + (rs.length-1) + '' ) } ) } ,matcher_for=function(t,i) {;
return matching_stage_for(t,i, ( 's' + (i) + '' ) ,i? ( 's' + (i-1) + '' ) : 's' ) } ,matching_stage_for=function(t,i,s,sp) {;
return(qs3) .replace( {_sp:sp,_s:s,_m:matching_expression(t,i,sp) } ) } ,matching_expression=function(t,i,sp) {;
return(function(it) {return it? (qse1) .replace( {_name:it._name.data,_step:it._step.data,_sp:sp} ) : (function(it) {return it? (qse2) .replace( {_sp:sp,_l: ( '' + (it.data.length) + '' ) ,_s:$.syntax.from_string(it.data) } ) : ( 'error: no matching form for ' + (t) + '' ) } ) .call(this, (is_constant(t) ) ) } ) .call(this, (is_substep(t) ) ) } ,substep_pattern=$.regexp( /(_name: _step)/ , {atom: 'word' } ) ,is_substep=function(t) {;
return(substep_pattern) .match(t) } ,is_constant=function(t) {;
return t.is_atom() &&t.data!== '.' &&t||t.is_group() &&is_constant(t[0] ) } ;
return(function(it) {return classes} ) .call(this, ( (function(xs1) {var x1,x01,xi1,xl1,xr1;
for(var xi1=0,xl1=xs1.length;
xi1<xl1;
 ++xi1)x1=xs1[xi1] , (visit(x1) ) ;
return xs1} ) .call(this, (function(o) {var ps= [] ;
for(var k in o)Object.prototype.hasOwnProperty.call(o,k) &&ps.push( [k,o[k] ] ) ;
return ps} ) .call(this, (rules) ) ) ) ) } ) .call(this) } } ) ;
result.caterwaul_expression_ref_table= {qse: ( "new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \"function\" ,new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \"s\" ) ) ,new caterwaul.syntax( \"{\" ,new caterwaul.syntax( \"return\" ,new caterwaul.syntax( \"_r\" ) ) ) ) )" ) ,qs: ( "new caterwaul.syntax( \"false\" )" ) ,qs1: ( "new caterwaul.syntax( \"||\" ,new caterwaul.syntax( \"_x0\" ) ,new caterwaul.syntax( \"()\" ,new caterwaul.syntax( \"_x\" ) ,new caterwaul.syntax( \"s\" ) ) )" ) ,qs2: ( "new caterwaul.syntax( \"function\" ,new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \"s\" ) ) ,new caterwaul.syntax( \"{\" ,new caterwaul.syntax( \";\" ,new caterwaul.syntax( \"var\" ,new caterwaul.syntax( \",\" ,new caterwaul.syntax( \"=\" ,new caterwaul.syntax( \"cons\" ) ,new caterwaul.syntax( \"{\" ,new caterwaul.syntax( \"\" ) ) ) ,new caterwaul.syntax( \"_definitions\" ) ) ) ,new caterwaul.syntax( \"if\" ,new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \"_last\" ) ) ,new caterwaul.syntax( \"{\" ,new caterwaul.syntax( \";\" ,new caterwaul.syntax( \"=\" ,new caterwaul.syntax( \".\" ,new caterwaul.syntax( \"_last\" ) ,new caterwaul.syntax( \"cons\" ) ) ,new caterwaul.syntax( \"cons\" ) ) ,new caterwaul.syntax( \"return\" ,new caterwaul.syntax( \"_last\" ) ) ) ) ) ) ) )" ) ,qs3: ( "new caterwaul.syntax( \"=\" ,new caterwaul.syntax( \"_s\" ) ,new caterwaul.syntax( \"&&\" ,new caterwaul.syntax( \"_sp\" ) ,new caterwaul.syntax( \"_m\" ) ) )" ) ,qse1: ( "new caterwaul.syntax( \"=\" ,new caterwaul.syntax( \".\" ,new caterwaul.syntax( \"cons\" ) ,new caterwaul.syntax( \"_name\" ) ) ,new caterwaul.syntax( \"()\" ,new caterwaul.syntax( \"_step\" ) ,new caterwaul.syntax( \"_sp\" ) ) )" ) ,qse2: ( "new caterwaul.syntax( \"===\" ,new caterwaul.syntax( \"()\" ,new caterwaul.syntax( \".\" ,new caterwaul.syntax( \".\" ,new caterwaul.syntax( \"_sp\" ) ,new caterwaul.syntax( \"s\" ) ) ,new caterwaul.syntax( \"substr\" ) ) ,new caterwaul.syntax( \",\" ,new caterwaul.syntax( \".\" ,new caterwaul.syntax( \"_sp\" ) ,new caterwaul.syntax( \"i\" ) ) ,new caterwaul.syntax( \"_l\" ) ) ) ,new caterwaul.syntax( \"_s\" ) )" ) } ;
return(result) } ) .call(this,new caterwaul.syntax( "(" ,new caterwaul.syntax( "function" ,new caterwaul.syntax( "(" ,new caterwaul.syntax( "s" ) ) ,new caterwaul.syntax( "{" ,new caterwaul.syntax( "return" ,new caterwaul.syntax( "_r" ) ) ) ) ) ,new caterwaul.syntax( "false" ) ,new caterwaul.syntax( "||" ,new caterwaul.syntax( "_x0" ) ,new caterwaul.syntax( "()" ,new caterwaul.syntax( "_x" ) ,new caterwaul.syntax( "s" ) ) ) ,new caterwaul.syntax( "function" ,new caterwaul.syntax( "(" ,new caterwaul.syntax( "s" ) ) ,new caterwaul.syntax( "{" ,new caterwaul.syntax( ";" ,new caterwaul.syntax( "var" ,new caterwaul.syntax( "," ,new caterwaul.syntax( "=" ,new caterwaul.syntax( "cons" ) ,new caterwaul.syntax( "{" ,new caterwaul.syntax( "" ) ) ) ,new caterwaul.syntax( "_definitions" ) ) ) ,new caterwaul.syntax( "if" ,new caterwaul.syntax( "(" ,new caterwaul.syntax( "_last" ) ) ,new caterwaul.syntax( "{" ,new caterwaul.syntax( ";" ,new caterwaul.syntax( "=" ,new caterwaul.syntax( "." ,new caterwaul.syntax( "_last" ) ,new caterwaul.syntax( "cons" ) ) ,new caterwaul.syntax( "cons" ) ) ,new caterwaul.syntax( "return" ,new caterwaul.syntax( "_last" ) ) ) ) ) ) ) ) ,new caterwaul.syntax( "=" ,new caterwaul.syntax( "_s" ) ,new caterwaul.syntax( "&&" ,new caterwaul.syntax( "_sp" ) ,new caterwaul.syntax( "_m" ) ) ) ,new caterwaul.syntax( "=" ,new caterwaul.syntax( "." ,new caterwaul.syntax( "cons" ) ,new caterwaul.syntax( "_name" ) ) ,new caterwaul.syntax( "()" ,new caterwaul.syntax( "_step" ) ,new caterwaul.syntax( "_sp" ) ) ) ,new caterwaul.syntax( "===" ,new caterwaul.syntax( "()" ,new caterwaul.syntax( "." ,new caterwaul.syntax( "." ,new caterwaul.syntax( "_sp" ) ,new caterwaul.syntax( "s" ) ) ,new caterwaul.syntax( "substr" ) ) ,new caterwaul.syntax( "," ,new caterwaul.syntax( "." ,new caterwaul.syntax( "_sp" ) ,new caterwaul.syntax( "i" ) ) ,new caterwaul.syntax( "_l" ) ) ) ,new caterwaul.syntax( "_s" ) ) ) ) ;
