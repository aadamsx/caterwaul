caterwaul.module( 'regexp-grammar-compiler' , (function(qse,qs) {var result= (function($) {$.regexp_grammar=function(rules) {;
return(function() {var parsed_rules= {} ,classes= {} ,visit=function(pair) {;
return(parsed_rules[pair[0] ] =$.regexp(pair[1] , {atom: 'word' } ) ,classes[pair[0] ] =parser_for(parsed_rules[pair[0] ] ) ) } ,parser_for=function(r) {;
return r.i() ?alternative_parser( (r) .flatten( '|' ) ) :sequential_parser( (r) .flatten( ',' ) ) } ,alternative_parser=function(rs) {;
return(qse) .replace( {_r: (function(it) {return it.unflatten() } ) .call(this, ( (function(xs) {var x,x0,xi,xl,xr;
for(var x0= (new $.syntax( '||' ) ) ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,x0= ( (x0) .push(x) ) ;
return x0} ) .call(this, (function(xs) {var x,x0,xi,xl,xr;
for(var xr=new xs.constructor() ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,xr.push( ( (qs) .replace( {_f:x} ) ) ) ;
return xr} ) .call(this,rs) ) ) ) } ) } ,sequential_parser=function(rs) {;
return'' } ;
return(function(it) {return classes} ) .call(this, ( (function(xs1) {var x1,x01,xi1,xl1,xr1;
for(var xi1=0,xl1=xs1.length;
xi1<xl1;
 ++xi1)x1=xs1[xi1] , (visit(x1) ) ;
return xs1} ) .call(this, (function(o) {var ps= [] ;
for(var k in o)Object.prototype.hasOwnProperty.call(o,k) &&ps.push( [k,o[k] ] ) ;
return ps} ) .call(this, (rules) ) ) ) ) } ) .call(this) } } ) ;
result.caterwaul_expression_ref_table= {qse: ( "new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \"function\" ,new caterwaul.syntax( \"(\" ,new caterwaul.syntax( \",\" ,new caterwaul.syntax( \"s\" ) ,new caterwaul.syntax( \"i\" ) ) ) ,new caterwaul.syntax( \"{\" ,new caterwaul.syntax( \"return\" ,new caterwaul.syntax( \"_r\" ) ) ) ) )" ) ,qs: ( "new caterwaul.syntax( \"()\" ,new caterwaul.syntax( \"_f\" ) ,new caterwaul.syntax( \",\" ,new caterwaul.syntax( \"s\" ) ,new caterwaul.syntax( \"i\" ) ) )" ) } ;
return(result) } ) .call(this,new caterwaul.syntax( "(" ,new caterwaul.syntax( "function" ,new caterwaul.syntax( "(" ,new caterwaul.syntax( "," ,new caterwaul.syntax( "s" ) ,new caterwaul.syntax( "i" ) ) ) ,new caterwaul.syntax( "{" ,new caterwaul.syntax( "return" ,new caterwaul.syntax( "_r" ) ) ) ) ) ,new caterwaul.syntax( "()" ,new caterwaul.syntax( "_f" ) ,new caterwaul.syntax( "," ,new caterwaul.syntax( "s" ) ,new caterwaul.syntax( "i" ) ) ) ) ) ;
