#!/usr/bin/env waul
# bitmasking: Is it faster to use boxed storage or a bitmask?

caterwaul('js_all')(function () {
  'starting benchmark' /!console.log,

  bench('low 12 bits',         1000, "bit_data /[0][x0 + (x & 0x00000fff) & 0x0fffffff] -seq".qf),
  bench('middle 12 bits',      1000, "bit_data /[0][x0 + (x & 0x003ffc00) & 0x0fffffff] -seq".qf),
  bench('almost high 12 bits', 1000, "bit_data /[0][x0 + (x & 0x7ff80000) & 0x0fffffff] -seq".qf),
  bench('high 12 bits',        1000, "bit_data /[0][x0 + (x & 0xfff00000) & 0x0fffffff] -seq".qf),

  bench('boxed', 1000, "boxed_data /[0][x0 + x.data & 0x0fffffff] -seq".qf),

  where [bit_data   = n[100000] *[Math.random() * 0x00100000 >>> 0] -seq,
         boxed_data = n[100000] *[{stuff: 0, data: bit_data[xi]}] -seq,

         bench(name, n, f) = '#{name}\033[40G\033[1;32m#{average /!Math.round}ms avg, #{max}ms max, #{min}ms min, #{Math.sqrt(variance) /!Math.round}ms stddev\033[0;0m' /!console.log
                     -where [samples  = n[8] *[run(name, n >>> 3, f)] -seq,
                             average  = samples /[x + x0] -seq -re- it / 8,
                             max      = samples /[x /-Math.max/ x0] -seq,
                             min      = samples /[x /-Math.min/ x0] -seq,
                             variance = samples /[0][x0 + (x - average) * (x - average)] -seq],
         run = function (name, n, f) {var start = +new Date(); for (var i = n; i >= 0; --i) f(); return +new Date() - start}]})();
