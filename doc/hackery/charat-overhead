#!/usr/bin/env waulrun
# charat-overhead: Find out how much overhead is associated with each method of traversing a string.

caterwaul('js_all')(function ($) {
  'starting benchmark' /!console.log,

  bench('charAt',     1000, function () {for (var i = 0, l = string.length; i < l; ++i) if (string.charAt(i) === '!') return i}),
  bench('charCodeAt', 1000, function () {for (var i = 0, l = string.length; i < l; ++i) if (string.charCodeAt(i) === 33) return i}),
  bench('indexOf',    1000, function () {return string.indexOf('!')}),
  bench('regexp',     1000, function () {return /^(.*)!/.exec(string)[1].length}),

  where [string = n[1000000] *['#'] -seq -re- '#{it.join("")}!',
         bench(name, n, f) = '#{name}\033[40G\033[1;32m#{average /!Math.round}ms avg, #{max}ms max, #{min}ms min, #{Math.sqrt(variance) /!Math.round}ms stddev\033[0;0m' /!console.log
                     -where [samples  = n[8] *[run(name, n >>> 3, f)] -seq,
                             average  = samples /[x + x0] -seq -re- it / 8,
                             max      = samples /[x /-Math.max/ x0] -seq,
                             min      = samples /[x /-Math.min/ x0] -seq,
                             variance = samples /[0][x0 + (x - average) * (x - average)] -seq],
         run = function (name, n, f) {var start = +new Date(); for (var i = n; i >= 0; --i) f(); return +new Date() - start}]})(caterwaul);
