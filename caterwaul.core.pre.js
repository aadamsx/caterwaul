(function (f){return f(f,(function (x){return function (){return  ++x}})(0))})(function (initializer,unique,undefined){var qw=function (x){return x.split(/\s+/)},id=function (x){return x},se=function (x,f){return f&&f.call(x,x)||x},genval=(function (n,m,u){return function (){return [u,n, ++m]}})( +new Date(),Math.random()*(1<<30)>>>0,unique()),genint=function (){var v=genval();
return (v[0]<<2)+v[0]+(v[1]<<1)+v[1]+v[2]},gensym=function (){var v=genval();
return ['gensym',v[0].toString(36),v[1].toString(36),v[2].toString(36)].join('_')},fail=function (m){throw new Error(m)},bind=function (f,t){return f.binding===t?f:f.original?bind(f.original,t):merge(function (){return f.apply(t,arguments)},{original:f,binding:t})},map=function (f,xs){for (var i=0,ys=[],l=xs.length;
i<l;
 ++i)ys.push(f(xs[i],i));
return ys},hash=function (s){for (var i=0,xs=qw(s),o={},l=xs.length;
i<l;
 ++i)o[xs[i]]=true;
return annotate_keys(o)},merge=function (o){for (var i=1,l=arguments.length,_;
i<l;
 ++i)if (_=arguments[i])for (var k in _)has(_,k)&&(o[k]=_[k]);
return o},extend=function (f){merge.apply(null,[f.prototype].concat(Array.prototype.slice.call(arguments,1)));
return f},is_caterwaul=gensym(),max_length_key=gensym(),annotate_keys=function (o){var max=0;
for (var k in o)own.call(o,k)&&(max=k.length>max?k.length:max);
o[max_length_key]=max;
return o},has=function (o,p){return p!=null&& !(p.length>o[max_length_key])&&own.call(o,p)},own=Object.prototype.hasOwnProperty;
var configurable=(function (){var associator_for=function (f){return function (name,behavior,value){return f[name]=(f.behaviors[f.attributes[name]=behavior]||id).call(f,value),f}},shallow_copy=function (x){return x&&(x.constructor===Array?x.slice():x.clone?x.clone():merge({},x))},copy_of=function (f){var g=merge(function (){return g.init.apply(g,arguments)},{behaviors:shallow_copy(f.behaviors),attributes:{}});
return se(g,function (g){(g.associate=associator_for(g))('behavior','method',function (name,definition){this.behaviors[name]=definition;
return this.associate(name,'method',function (attribute,value){return this.associate(attribute,name,value)})}).behavior('method',g.behaviors.method);
for (var k in f.attributes)has(f.attributes,k)&&g.associate(k,f.attributes[k],f[k])})},replica=se(function (){return copy_of({behaviors:{method:function (v){return bind(v,this)}}}).behavior('field').behavior('shallow',shallow_copy).behavior('self_reference',function (){return this})},function (f){f.init=f});
return function (){return replica().shallow('configurations',{}).shallow('has',{}).method('configuration',function (name,f){this.configurations[name]=f;
return this}).method('tconfiguration',function (configs,name,f,bindings){this.configurations[name]=this.clone(configs)(f,bindings);
return this}).method('namespace',function (s){return this[s]||this.shallow(s,{})[s]}).method('alias',function (from,to){return this.method(to,function (){return this[from].apply(this,arguments)})}).method('once',function (name,f){var k=gensym();
return this.method(name,function (){return this[k]||(this[k]=f.apply(this,arguments))})}).method('clone',function (){return arguments.length?this.clone().configure.apply(null,arguments):copy_of(this)}).method('tconfigure',function (cs,f){return this.configure(this.clone(cs)(f))}).method('configure',function (){for (var i=0,l=arguments.length,_;
_=arguments[i],i<l;
 ++i)if (_.constructor===String)for (var cs=qw(arguments[i]),j=0,lj=cs.length;
_=cs[j],j<lj;
 ++j)if (this.configurations[_])this.has[_]||(this.has[_]=this.configurations[_].call(this,this)||this);
else throw new Error('error: configuration "'+_+'" does not exist');
else _ instanceof Array?this.configure.apply(this,_.slice()):_.call(this,this);
return this})}})();
var original_global=typeof caterwaul==='undefined'?undefined:caterwaul,caterwaul_global=caterwaul=se(configurable(),function (){this.deglobalize=function (){caterwaul=original_global;
return this}});
caterwaul_global.method('global',function (){return caterwaul_global}).self_reference('caterwaul').field('is_caterwaul',is_caterwaul).field('initializer',initializer).field('unique',unique).field('gensym',gensym).field('genint',genint).once('id',gensym).method('toString',function (){return '[caterwaul instance '+this.id()+']'}).field('merge',merge).method('check_version',function (){if (original_global&&this.version===original_global.version)this.deglobalize();
return this}).method('reinitialize',function (transform,erase_configurations){var c=(transform||id)(this.initializer),result=c(c,this.unique).deglobalize();
erase_configurations||(result.configurations=this.configurations);
return result}).method('magic',(function (table){return function (name){return table[name]||(table[name]={})}}));
caterwaul_global.method('variadic',function (name,f){return this.method(name,function (){for (var i=0,l=arguments.length;
i<l;
 ++i)f.call(this,arguments[i]);
return this})}).method('right_variadic_binary',function (name,f){return this.method(name,function (){for (var i=0,l=arguments.length-1,x=arguments[l];
i<l;
 ++i)f.call(this,arguments[i],x);
return this})});
var lex_op=hash('. new ++ -- u++ u-- u+ u- typeof u~ u! ! * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ? = += -= *= /= %= &= |= ^= <<= >>= >>>= : , '+'return throw case var const break continue void else u; ;'),lex_table=function (s){for (var i=0,xs=[false];
i<8;
 ++i)xs.push.apply(xs,xs);
for (var i=0,l=s.length;
i<l;
 ++i)xs[s.charCodeAt(i)]=true;
return xs},lex_float=lex_table('.0123456789'),lex_decimal=lex_table('0123456789'),lex_integer=lex_table('0123456789abcdefABCDEFx'),lex_exp=lex_table('eE'),lex_space=lex_table(' \n\r\t'),lex_bracket=lex_table('()[]{}'),lex_opener=lex_table('([{'),lex_punct=lex_table('+-*/%&|^!~=<>?:;.,'),lex_eol=lex_table('\n\r'),lex_regexp_suffix=lex_table('gims'),lex_quote=lex_table('\'"/'),lex_slash='/'.charCodeAt(0),lex_star='*'.charCodeAt(0),lex_back='\\'.charCodeAt(0),lex_x='x'.charCodeAt(0),lex_dot='.'.charCodeAt(0),lex_zero='0'.charCodeAt(0),lex_postfix_unary=hash('++ --'),lex_ident=lex_table('$_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'),parse_reduce_order=map(hash,['function','( [ . [] ()','new delete','u++ u-- ++ -- typeof u~ u! u+ u-','* / %','+ -','<< >> >>>','< > <= >= instanceof in','== != === !==','&','^','|','&&','||','case','?','= += -= *= /= %= &= |= ^= <<= >>= >>>=',':',',','return throw break continue void','var const','if else try catch finally for switch with while do',';']),parse_associates_right=hash('= += -= *= /= %= &= ^= |= <<= >>= >>>= ~ ! new typeof u+ u- -- ++ u-- u++ ? if else function try catch finally for switch case with while do'),parse_inverse_order=(function (xs){for (var o={},i=0,l=xs.length;
i<l;
 ++i)for (var k in xs[i])has(xs[i],k)&&(o[k]=i);
return annotate_keys(o)})(parse_reduce_order),parse_index_forward=(function (rs){for (var xs=[],i=0,l=rs.length,_=null;
_=rs[i],xs[i]=true,i<l;
 ++i)for (var k in _)if (has(_,k)&&(xs[i]=xs[i]&& !has(parse_associates_right,k)))break ;
return xs})(parse_reduce_order),parse_lr=hash('[] . () * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || = += -= *= /= %= &= |= ^= <<= >>= >>>= , : ;'),parse_r_until_block=annotate_keys({'function':2,'if':1,'do':1,'catch':1,'try':1,'for':1,'while':1,'with':1,'switch':1}),parse_accepts=annotate_keys({'if':'else','do':'while','catch':'finally','try':'catch'}),parse_invocation=hash('[] ()'),parse_r_optional=hash('return throw break continue else'),parse_r=hash('u+ u- u! u~ u++ u-- new typeof finally case var const void delete'),parse_block=hash('; {'),parse_invisible=hash('i;'),parse_l=hash('++ --'),parse_group=annotate_keys({'(':')','[':']','{':'}','?':':'}),parse_ambiguous_group=hash('[ ('),parse_ternary=hash('?'),parse_not_a_value=hash('function if for while catch'),parse_also_expression=hash('function');
(function (){var syntax_node_inspect=function (x){return x?x.inspect():'(<>)'},syntax_node_tostring=function (x){return x?x.serialize?x.serialize():x.toString():''},syntax_common={_replace:function (n){return (n.l=this.l)&&(this.l.r=n),(n.r=this.r)&&(this.r.l=n),this},_append_to:function (n){return n&&n._append(this),this},_reparent:function (n){return this.p&&this.p[0]===this&&(this.p[0]=n),this},_fold_l:function (n){return this._append(this.l&&this.l._unlink(this))},_append:function (n){return (this[this.length++]=n)&&(n.p=this),this},_fold_r:function (n){return this._append(this.r&&this.r._unlink(this))},_sibling:function (n){return n.p=this.p,(this.r=n).l=this},_fold_lr:function (){return this._fold_l()._fold_r()},_wrap:function (n){return n.p=this._replace(n).p,this._reparent(n),delete this.l,delete this.r,this._append_to(n)},_fold_rr:function (){return this._fold_r()._fold_r()},_unlink:function (n){return this.l&&(this.l.r=this.r),this.r&&(this.r.l=this.l),delete this.l,delete this.r,this._reparent(n)},pop:function (){return  --this.length,this},push:function (x){return this[this.length++]=x,this},id:function (){var id=genint();
return (this.id=function (){return id})()},each:function (f){for (var i=0,l=this.length;
i<l;
 ++i)f(this[i],i);
return this},map:function (f){for (var n=new this.constructor(this),i=0,l=this.length;
i<l;
 ++i)n.push(f(this[i],i)||this[i]);
return n},nmap:function (f){for (var n=new this.constructor(this),i=0,l=this.length,r;
i<l;
 ++i)(r=f(this[i],i))&&n.push(r);
return n},reach:function (f){f(this);
this.each(function (n){n&&n.reach(f)});
return this},rmap:function (f){var r=f(this);
return  !r||r===this?this.map(function (n){return n&&n.rmap(f)}):r.data===undefined?new this.constructor(r):r},rnmap:function (f){var r=f(this);
return r===this?this.nmap(function (n){return n&&n.rnmap(f)}):r&&r.data===undefined?new this.constructor(r):r},clone:function (){return this.rmap(function (){return false})},collect:function (p){var ns=[];
this.reach(function (n){p(n)&&ns.push(n)});
return ns},replace:function (rs){return this.rnmap(function (n){if ( !own.call(rs,n.data))return n;
var replacement=rs[n.data];
return replacement&&replacement.constructor===String?new n.constructor(replacement,Array.prototype.slice.call(n)):replacement})},repopulated_with:function (xs){return new this.constructor(this.data,xs)},change:function (i,x){return se(new this.constructor(this.data,Array.prototype.slice.call(this)),function (n){n[i]=x})},compose_single:function (i,f){return this.change(i,f(this[i]))},traverse:function (f){f({entering:this});
f({exiting:this.each(function (n){n&&n.traverse(f)})});
return this},flatten:function (d){d=d||this.data;
return d!==this.data?this.as(d): !(has(parse_lr,d)&&this.length)?this:has(parse_associates_right,d)?se(new this.constructor(d),bind(function (n){for (var i=this;
i&&i.data===d;
i=i[1])n.push(i[0]);
n.push(i)},this)):se(new this.constructor(d),bind(function (n){for (var i=this,ns=[];
i.data===d;
i=i[0])i[1]&&ns.push(i[1]);
ns.push(i);
for (i=ns.length-1;
i>=0;
 --i)n.push(ns[i])},this))},unflatten:function (){var right=has(parse_associates_right,this.data);
return this.length<=2?this:se(new this.constructor(this.data),bind(function (n){if (right)for (var i=0,l=this.length-1;
i<l;
 ++i)n=n.push(this[i]).push(i<l-2?new this.constructor(this.data):this[i])[1];
else for (var i=this.length-1;
i>=1;
 --i)n=n.push(i>1?new this.constructor(this.data):this[0]).push(this[i])[0]},this))},as:function (d){return this.data===d?this:new this.constructor(d).push(this)},is_string:function (){return /['"]/.test(this.data.charAt(0))},as_escaped_string:function (){return this.data.substr(1,this.data.length-2)},is_number:function (){return /^-?(0x|\d|\.\d+)/.test(this.data)},as_number:function (){return Number(this.data)},is_boolean:function (){return this.data==='true'||this.data==='false'},as_boolean:function (){return this.data==='true'},is_regexp:function (){return /^\/./.test(this.data)},as_escaped_regexp:function (){return this.data.substring(1,this.data.lastIndexOf('/'))},is_wildcard:function (){return this.data.charCodeAt(0)===95},has_grouped_block:function (){return has(parse_r_until_block,this.data)},is_block:function (){return has(parse_block,this.data)},is_blockless_keyword:function (){return has(parse_r_optional,this.data)},is_null_or_undefined:function (){return this.data==='null'||this.data==='undefined'},is_constant:function (){return this.is_number()||this.is_string()||this.is_boolean()||this.is_regexp()||this.is_null_or_undefined()},left_is_lvalue:function (){return /=$/.test(this.data)||/\+\+$/.test(this.data)||/--$/.test(this.data)},is_empty:function (){return  !this.length},has_parameter_list:function (){return this.data==='function'||this.data==='catch'},has_lvalue_list:function (){return this.data==='var'||this.data==='const'},is_dereference:function (){return this.data==='.'||this.data==='[]'},is_invocation:function (){return this.data==='()'},is_contextualized_invocation:function (){return this.is_invocation()&&this[0]&&this[0].is_dereference()},is_invisible:function (){return has(parse_invisible,this.data)},is_binary_operator:function (){return has(parse_lr,this.data)},is_prefix_unary_operator:function (){return has(parse_r,this.data)},is_postfix_unary_operator:function (){return has(parse_l,this.data)},is_unary_operator:function (){return this.is_prefix_unary_operator()||this.is_postfix_unary_operator()},accepts:function (e){return parse_accepts[this.data]&&this.accepts[parse.data]===(e.data||e)},bindings:function (hash){var result=hash||{};
this.reach(function (n){if (n.binds_a_value)result[n.data]=n.value});
return result},match:function (target,variables){variables||(variables={_:target});
if (this.is_wildcard())return variables[this.data]=target,variables;
else if (this.length===target.length&&this.data===target.data){for (var i=0,l=this.length;
i<l;
 ++i)if ( !this[i].match(target[i],variables))return null;
return variables}},ends_with_block:function (){var block=this[parse_r_until_block[this.data]];
return this.data==='{'||has(parse_r_until_block,this.data)&&(this.data!=='function'||this.length===3)&&block&&block.ends_with_block()},toString:function (){return 'qs['+this.serialize()+']'},inspect:function (){return this.toString()},structure:function (){return (this.l?'(left) <- ':'')+'('+this.data+(this.length?' '+map(syntax_node_inspect,this).join(' '):'')+')'+(this.r?' -> '+this.r.inspect():'')},serialize:function (xs){var op=this.data,space=op&&/\w/.test(op.charAt(op.length-1))?' ':'';
return op===';'?this.length?map(syntax_node_tostring,this).join(';\n'):';':has(parse_invisible,op)?map(syntax_node_tostring,this).join(space):has(parse_invocation,op)?map(syntax_node_tostring,[this[0],op.charAt(0),this[1],op.charAt(1)]).join(space):has(parse_ternary,op)?map(syntax_node_tostring,[this[0],op,this[1],parse_group[op],this[2]]).join(space):has(parse_group,op)?op+map(syntax_node_tostring,this).join(space)+parse_group[op]:has(parse_lr,op)?this.length?map(syntax_node_tostring,this).join(space+op+space):op:has(parse_r,op)||has(parse_r_optional,op)?op.replace(/^u/,' ')+space+(this[0]?this[0].serialize():''):has(parse_r_until_block,op)?has(parse_accepts,op)&&this[1]&&this[2]&&parse_accepts[op]===this[2].data&& !this[1].ends_with_block()?op+space+map(syntax_node_tostring,[this[0],this[1],';\n',this[2]]).join(''):op+space+map(syntax_node_tostring,this).join(''):has(parse_l,op)?(this[0]?this[0].serialize():'')+space+op:op}};
caterwaul_global.method('define_syntax',function (name,ctor){return this.field(name,extend.apply(this,[ctor,syntax_common].concat(Array.prototype.slice.call(arguments,2))))}).method('ensure_syntax',function (thing){return thing&&thing.constructor===String?this.parse(thing):thing}).field('syntax_common',syntax_common).define_syntax('ref',function (value){if (value instanceof this.constructor){this.value=value.value;
this.data=value.data}else {this.value=value;
this.data=gensym()}},{length:0,binds_a_value:true}).define_syntax('syntax',function (data){if (data instanceof this.constructor)this.data=data.data,this.length=0;
else {this.data=data&&data.toString();
this.length=0;
for (var i=1,l=arguments.length,_;
_=arguments[i],i<l;
 ++i)for (var j=0,lj=_.length,it,itc;
_ instanceof Array?(it=_[j],j<lj):(it=_, !j);
 ++j)this._append((itc=it.constructor)===String||itc===Number||itc===Boolean?new this.constructor(it):it)}})})();
caterwaul_global.alias('parse','decompile').method('parse',(function (){return function (input){var s=input.toString(),mark=0,c=0,re=true,esc=false,dot=false,exp=false,close=0,t='',i=0,l=s.length,cs=function (i){return s.charCodeAt(i)},grouping_stack=[],gs_top=null,head=null,parent=null,indexes=map(function (){return []},parse_reduce_order),invocation_nodes=[],all_nodes=[],new_node=function (n){return all_nodes.push(n),n},push=function (n){return head?head._sibling(head=n):(head=n._append_to(parent)),new_node(n)},syntax_node=caterwaul_global.syntax;
while ((mark=i)<l){while (lex_space[c=cs(i)]&&i<l)mark= ++i;
esc=exp=dot=t=false;
if (lex_bracket[c]){t= ! ! ++i;
re=lex_opener[c]}else if (c===lex_slash&&cs(i+1)===lex_star&&(i+=2)){while ( ++i<l&&cs(i)!==lex_slash||cs(i-1)!==lex_star);
t= ! ++i}else if (c===lex_slash&&cs(i+1)===lex_slash){while ( ++i<l&& !lex_eol[cs(i)]);
t=false}else if (lex_quote[c]&&(close=c)&&re&& !(re= !(t=s.charAt(i)))){while ( ++i<l&&(c=cs(i))!==close||esc)esc= !esc&&c===lex_back;
while ( ++i<l&&lex_regexp_suffix[cs(i)]);
t=true}else if (c===lex_zero&&lex_integer[cs(i+1)]){while ( ++i<l&&lex_integer[cs(i)]);
re= !(t=true)}else if (lex_float[c]&&(c!==lex_dot||lex_decimal[cs(i+1)])){while ( ++i<l&&(lex_decimal[c=cs(i)]||(dot^(dot|=c===lex_dot))||(exp^(exp|=lex_exp[c]&& ++i))));
while (i<l&&lex_decimal[cs(i)]) ++i;
re= !(t=true)}else if (lex_punct[c]&&(t=re?'u':'',re=true)){while (i<l&&lex_punct[cs(i)]&&has(lex_op,t+s.charAt(i)))t+=s.charAt(i++);
re= !has(lex_postfix_unary,t)}else {while ( ++i<l&&lex_ident[cs(i)]);
re=has(lex_op,t=s.substring(mark,i))}if (i===mark)throw new Error('Caterwaul lex error at "'+s.substr(mark,40)+'" with leading context "'+s.substr(mark-40,40)+'" (probably a Caterwaul bug)');
if (t===false)continue ;
t=t===true?s.substring(mark,i):t==='u;'?';':t;
t===gs_top?(grouping_stack.pop(),gs_top=grouping_stack[grouping_stack.length-1],head=head?head.p:parent,parent=null):(has(parse_group,t)?(grouping_stack.push(gs_top=parse_group[t]),parent=push(new_node(new syntax_node(t))),head=null):push(new_node(new syntax_node(t))),has(parse_inverse_order,t)&&indexes[parse_inverse_order[t]].push(head||parent));
re|=t===')'&&head.l&&has(parse_r_until_block,head.l.data)}for (var i=0,l=indexes.length,forward,_;
_=indexes[i],forward=parse_index_forward[i],i<l;
 ++i)for (var j=forward?0:_.length-1,lj=_.length,inc=forward?1: -1,node,data;
node=_[j],data=node&&node.data,forward?j<lj:j>=0;
j+=inc)if (has(parse_lr,data))node._fold_lr();
else if (has(parse_ambiguous_group,data)&&node.l&&(node.l.data==='.'|| !(has(lex_op,node.l.data)||has(parse_not_a_value,node.l.data))))invocation_nodes.push(node.l._wrap(new_node(new syntax_node(data+parse_group[data]))).p._fold_r());
else if (has(parse_l,data))node._fold_l();
else if (has(parse_r,data))node._fold_r();
else if (has(parse_ternary,data)){node._fold_lr();
var temp=node[1];
node[1]=node[0];
node[0]=temp}else if (has(parse_r_until_block,data)&&node.r&&node.r.data!==':'){for (var count=0,limit=parse_r_until_block[data];
count<limit&&node.r&& !has(parse_block,node.r.data);
 ++count)node._fold_r();
node.r&&node.r.data!==';'&&node._fold_r();
if (has(parse_accepts,data)&&parse_accepts[data]===(node.r&&node.r.r&&node.r.r.data))node._fold_r().pop()._fold_r();
else if (has(parse_accepts,data)&&parse_accepts[data]===(node.r&&node.r.data))node._fold_r()}else if (has(parse_r_optional,data))node.r&&node.r.data!==';'&&node._fold_r();
for (var i=all_nodes.length-1,_;
_=all_nodes[i],i>=0;
 --i)_.r&&_._wrap(new syntax_node('i;')).p._fold_r();
for (var i=0,l=invocation_nodes.length,_,child;
_=invocation_nodes[i],i<l;
 ++i)(child=_[1]=_[1][0])&&(child.p=_);
while (head.p)head=head.p;
for (var i=all_nodes.length-1;
i>=0;
 --i)delete all_nodes[i].p;
return head}})());
caterwaul_global.shallow('globals',{}).method('compile',function (tree,environment){var vars=[],values=[],bindings=merge({},this.globals,environment||{},tree.bindings()),s=gensym();
for (var k in bindings)if (own.call(bindings,k))vars.push(k),values.push(bindings[k]);
var code=map(function (v){return v==='this'?'':'var '+v+'='+s+'.'+v},vars).join(';')+';return('+tree.serialize()+')';
try {return (new Function(s,code)).call(bindings['this'],bindings)}catch (e){throw new Error('caught '+e+' while compiling '+code)}});
caterwaul_global.variadic('event',function (name){var listeners=name+'_listeners',new_listener='on_'+name;
return this.shallow(listeners,[]).variadic(new_listener,function (l){this[listeners].push(l);
return this}).method(name,function (){for (var ls=this[listeners],i=0,l=ls.length;
i<l;
 ++i)ls[i].apply(this,arguments);
return this})});
caterwaul_global.event('bake').on_bake(function (){this.on_bake(function (){throw new Error('cannot bake a caterwaul function more than once')})}).method('method_until_baked',function (name,f){return this.method(name,f).on_bake(function (){this.method(name,function (){throw new Error('cannot call '+name+' on a baked caterwaul')})})});
(function (){caterwaul_global.shallow('macro_patterns',[]).shallow('macro_expanders',[]).method('with_gensyms',function (t){var gensyms={};
return this.ensure_syntax(t).rmap(function (n){return /^gensym/.test(n.data)&&new this.constructor(gensyms[n.data]||(gensyms[n.data]=gensym()),this)})}).method('macroexpand',function (t){return this.ensure_syntax(t).rmap(this.macroexpand_single)}).method('macroexpand_single',function (t){return this.macro_expand_naive(t,this.macro_patterns,this.macro_expanders)}).on_bake(function (){this.method('macroexpand_single',this.create_baked_macroexpander(this.macro_patterns,this.macro_expanders))}).method('expander_from_string',function (expander){var tree=this.parse(expander);
return function (match){return tree.replace(match)}}).method('ensure_expander',function (expander){return expander.constructor===String?this.expander_from_string(expander):expander.constructor===this.syntax?function (match){return expander.replace(match)}:expander.constructor===Function?expander:fail('unknown macroexpander format: '+expander)}).right_variadic_binary('final_macro',function (pattern,expander){return this.macro_patterns.push(this.ensure_syntax(pattern)),this.macro_expanders.push(this.ensure_expander(expander)),this}).right_variadic_binary('macro',function (pattern,expander){expander=this.ensure_expander(expander);
return this.final_macro(pattern,function (){var t=expander.apply(this,arguments);
return t&&this.macroexpand(t)})})})();
caterwaul_global.method('macro_expand_naive',function (t,macros,expanders){var self=this;
return t.rmap(function (n){for (var i=macros.length-1,match,replacement;
i>=0;
 --i)if ((match=macros[i].match(n))&&(replacement=expanders[i].call(self,match)))return replacement})});
caterwaul_global.method('create_baked_macroexpander',(function (){var resolve_tree_path=function (tree,path){for (var i=0,l=path.length;
i<l;
 ++i)if ( !(tree=tree[path.charCodeAt(i)]))return tree;
return tree},partition_treeset=function (trees,path){for (var r={},i=0,l=trees.length,t,ti;
i<l;
 ++i)(t=resolve_tree_path(ti=trees[i],path))?(t=String.fromCharCode(t.length)+t.data):(t=''),(r[t]||(r[t]=[])).push(ti);
return r},next_path=function (visited,trees){if ( !visited)return '';
for (var k in visited)if (visited.hasOwnProperty(k))for (var i=0,l=visited[k],p;
i<l;
 ++i)if ( !((p=k+String.fromCharCode(i)) in visited)){for (var j=0,lj=trees.length,skip;
j<lj;
 ++j)if (skip=resolve_tree_path(trees[j],p).is_wildcard())break ;
if ( !skip)return p}},visit_path=function (path,visited,trees){var partitions=partition_treeset(trees,path),kv=function (k,v){var r={};
r[k]=v;
return r};
for (var k in partitions)if (partitions.hasOwnProperty(k))partitions[k]={trees:partitions[k],visited:merge({},visited,kv(path,k.charCodeAt(0)))};
return partitions},split_treeset_on_specification=function (trees,pattern_data,visited){var r=[],visited_count=0,available_paths={},available_count=0;
if (visited!=null){for (var k in visited)if (visited.hasOwnProperty(k)){ ++visited_count;
for (var i=0,l=visited[k];
i<l;
 ++i)available_paths[k+String.fromCharCode(i)]= ++available_count}}else available_paths={'':available_count=1};
for (var p=[],s=false,remaining_paths=null,remaining_count=0,i=0,l=trees.length,t,td;
i<l;
 ++i)if (((td=pattern_data[(t=trees[i]).id()]).non_wildcards===visited_count)!==s)r.push(p),p=[t],s= !s,remaining_paths=null;
else if (s)p.push(t);
else {if (remaining_paths===null)remaining_paths=merge({},available_paths),remaining_count=available_count;
for (var ps=td.wildcard_paths,j=0,lj=ps.length,pj;
j<lj;
 ++j)remaining_count-=remaining_paths.hasOwnProperty(pj=ps[j]),delete remaining_paths[pj];
if (remaining_count)p.push(t);
else r.push(p),r.push([]),p=[t],remaining_paths=null}p.length&&r.push(p);
return r},wildcard_paths=function (t){for (var r=t.is_wildcard()?['']:[],i=0,l=t.length;
i<l;
 ++i)for (var ps=t[i]&&wildcard_paths(t[i]),j=0,lj=ps.length;
j<lj;
 ++j)r.push(String.fromCharCode(i)+ps[j]);
return r},pattern_data=function (ps,es){for (var r={},i=0,l=ps.length,p;
i<l;
 ++i)r[(p=ps[i]).id()]={expander:es[i],non_wildcards:non_wildcard_node_count(p),wildcard_paths:wildcard_paths(p)};
return r},pattern_match_function_template=caterwaul_global.parse('function (t) {var result; _body}'),empty_variable_mapping_table=function (){return {'':'t'}},partition_template=caterwaul_global.parse('switch (_value) {_cases}'),partition_branch_template=caterwaul_global.parse('case _value: _body; break'),single_macro_attempt_template=caterwaul_global.parse('do {_body} while (false)'),indexed_path_reference_template=caterwaul_global.parse('_base[_index]'),absolute_path_reference_template=caterwaul_global.parse('_base'),generate_path_reference=function (variables,path){return variables[path]?absolute_path_reference_template.replace({_base:variables[path]}):indexed_path_reference_template.replace({_base:generate_path_reference(variables,path.substr(0,path.length-1)),_index:''+path.charCodeAt(path.length-1)})},path_variable_template=caterwaul_global.parse('var _temp = _value; if (! _temp) break'),path_exists_template=caterwaul_global.parse('null'),generate_path_variable=function (variables,path){if (variables[path])return path_exists_template;
var name='t'+genint(),replacements={_value:generate_path_reference(variables,path),_temp:name};
return variables[path]=name,path_variable_template.replace(replacements)},non_wildcard_node_count=function (tree){var r=0;
tree.reach(function (node){r+= !node.is_wildcard()});
return r},path_reference_object_template=caterwaul_global.parse('{_elements}'),variable_value_pair_template=caterwaul_global.parse('_variable: _value'),generate_path_reference_object=function (pattern,variables,paths){for (var refs=[],i=0,l=paths.length;
i<l;
 ++i)refs.push(variable_value_pair_template.replace({_variable:resolve_tree_path(pattern,paths[i]).data,_value:generate_path_reference(variables,paths[i])}));
return path_reference_object_template.replace({_elements:refs.length?new caterwaul_global.syntax(',',refs):undefined})},macroexpander_invocation_template=caterwaul_global.parse('if (result = _expander.apply(this, _path_reference_object)) return result'),generate_macroexpander_invocation=function (pattern_data,pattern,variables){return macroexpander_invocation_template.replace({_expander:new caterwaul_global.ref(pattern_data[pattern.id()].expander),_path_reference_object:generate_path_reference_object(pattern,variables,pattern_data[pattern.id()].wildcard_paths)})},length_reference_template=caterwaul_global.parse('_value.length'),data_reference_template=caterwaul_global.parse('_value.data'),generate_partitioned_switch=function (trees,visited,variables,pattern_data){var path=next_path(visited,trees),partitions=visit_path(path,visited,trees),lengths={},length_pairs=[];
for (var k in partitions)if (partitions.hasOwnProperty(k))(lengths[k.charCodeAt(0)]||(lengths[k.charCodeAt(0)]=[])).push(k.substr(1));
for (var k in lengths)if (lengths.hasOwnProperty(k))length_pairs.push([k,lengths[k]]);
var new_variables=merge({},variables),path_reference_variable=generate_path_variable(new_variables,path),variable=new_variables[path],length_reference=length_reference_template.replace({_value:variable}),data_reference=data_reference_template.replace({_value:variable});
for (var length_cases=new caterwaul_global.syntax(';'),i=0,l=length_pairs.length,pair;
i<l;
 ++i){for (var data_cases=new caterwaul_global.syntax(';'),length=(pair=length_pairs[i])[0],values=pair[1],j=0,lj=values.length,p,v;
j<lj;
 ++j)p=partitions[String.fromCharCode(length)+(v=values[j])],data_cases.push(partition_branch_template.replace({_value:'"'+v.replace(/([\\"])/g,'\\$1')+'"',_body:generate_decision_tree(p.trees,path,p.visited,new_variables,pattern_data)}));
lj&&length_cases.push(partition_branch_template.replace({_value:''+length_pairs[i][0],_body:partition_template.replace({_value:data_reference,_cases:data_cases})}))}return single_macro_attempt_template.replace({_body:new caterwaul_global.syntax(';',path_reference_variable,length_cases.length?partition_template.replace({_value:length_reference,_cases:length_cases}):[])})},generate_unpartitioned_sequence=function (trees,variables,pattern_data){for (var r=new caterwaul_global.syntax(';'),i=0,l=trees.length;
i<l;
 ++i)r.push(generate_macroexpander_invocation(pattern_data,trees[i],variables));
return r},generate_decision_tree=function (trees,path,visited,variables,pattern_data){for (var r=new caterwaul_global.syntax(';'),sts=split_treeset_on_specification(trees,pattern_data,visited),i=0,l=sts.length;
i<l;
 ++i)sts[i].length&&r.push(i&1?generate_unpartitioned_sequence(sts[i],variables,pattern_data):generate_partitioned_switch(sts[i],visited,variables,pattern_data));
return r};
return function (patterns,expanders){for (var i=patterns.length-1,rps=[],res=[];
i>=0;
 --i)rps.push(patterns[i]),res.push(expanders[i]);
return this.compile(pattern_match_function_template.replace({_body:generate_decision_tree(rps,null,null,empty_variable_mapping_table(),pattern_data(rps,res))}))}})());
caterwaul_global.method('macro_form',function (){for (var i=0,l=arguments.length-1;
i<l;
 ++i)this.define_macro_form(arguments[i],arguments[l]);
return this}).method('define_macro_form',function (name,define){var names=name+'s',form=name+'_form',forms=name+'_forms',define_name='define_'+name;
return this.shallow(names,[]).method(name,function (){for (var fs=this[forms],def=this[define_name],i=0,l=arguments.length-1,definition=this.ensure_expander(arguments[l]),lj=fs.length;
i<l;
 ++i){for (var name=arguments[i],j=0;
j<lj;
 ++j)def.call(this,name,definition,fs[j]);
this[names].push({name:name,definition:definition})}return this}).shallow(forms,[]).method(form,function (){for (var xs=this[names],def=this[define_name],i=0,l=arguments.length,lj=xs.length;
i<l;
 ++i){for (var form=this.ensure_syntax(arguments[i]),j=0;
j<lj;
 ++j)def.call(this,xs[j].name,xs[j].definition,form);
this[forms].push(form)}return this}).method(define_name,function (){return define.apply(this,arguments),this})});
caterwaul_global.method('define_list',function (name,list_name){return this.shallow(list_name||(list_name=name+'s'),[]).method(name,function (){return arguments.length?this.shallow(list_name,this[list_name].concat(Array.prototype.slice.call(arguments))):this[list_name]})}).define_list('before','before_functions').define_list('after','after_functions').method('apply_before_functions',function (x){for (var xs=this.before_functions,i=0,l=xs.length;
i<l;
 ++i)x=xs[i].call(this,x);
return x}).method('apply_after_functions',function (x){for (var xs=this.after_functions,i=0,l=xs.length;
i<l;
 ++i)x=xs[i].call(this,x);
return x});
caterwaul_global.field('precompiled_internal_table',{}).method('precompiled_internal',function (f){var k=gensym();
return this.precompiled_internal_table[k]=f,k}).method('is_precompiled',function (f){return f.constructor===String&&this.precompiled_internal_table[f]}).method('init',function (f,environment){return this.is_precompiled(f)||this.init_not_precompiled(f,environment)}).method('init_not_precompiled',function (f,environment){var result=f.constructor===this.syntax?this.apply_before_functions(f):f;
result=f.constructor===this.syntax?this.macroexpand(result):this.compile(this(this.decompile(result)),environment);
result=f.constructor===this.syntax?this.apply_after_functions(result):result;
return result});
return caterwaul_global});
caterwaul.field('version','f3fba6e80f1a7e8598d470a41c52291c').check_version();
