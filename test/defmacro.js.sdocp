sdocp('test/defmacro.js.sdoc', 'Caterwaul defmacro standard library tests\n\ntest(function () {\n  var c = caterwaul.clone(\'std.qs std.qg std.fn std.lvalue std.defmacro std.with_gensyms\');\n\n  c(function (eq) {\n    eq(defmacro[foo][fn_[qs[bar]]], null);\n    var bar = 6;\n    eq(foo, 6);\n    var x = 3;\n    eq(x + 5, 8, \'first\');\n\n    eq(defmacro[_ + _][fn[l, r][qs[l * r].replace({l: l, r: r})]], null);\n    eq(x + 5, 15, \'second\');\n\n    defmacro[loop[_].over[_]][fn[expr, xs][(with_gensyms[i, l, xs][qg[function () {\n      for (var i = 0, xs = _array, l = xs.length, it; it = xs[i], i < l; ++i) {_body}}]()]).replace({_array: xs, _body: expr})]];\n    var count = 0;\n    loop[eq(it, ++count)].over[[1, 2, 3, 4, 5]];\n    eq(count, 5);\n\n    var less = fn[x, y][qg[++count, x < y]];\n    defsubst[_left < _right][less(_left, _right)];\n    eq(5 < 6, true);\n    eq(count, 6);\n\n    eq(6 < 5, false);\n    eq(count, 7);\n\n    less(x, y) = x > y;\n    eq(6 < 5, true);\n  }) (eq);\n});\n');