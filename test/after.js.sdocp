sdocp('sdoc::js::test/after', 'Tests for composition via the after() method.\n\ntest(\'after\', function () {\n  caterwaul.clone(\'std\')(function (eq) {\n    var c1 = caterwaul.clone(\'std macro\'), c2 = caterwaul.clone(\'std macro\');\n\n    eq(c1.after.constructor, Function); c1.rmacro(qs[_ + _], fn[x, y][qs[_x * _y].replace({_x: x, _y: y})]);\n    eq(c2.after.constructor, Function); c2.rmacro(qs[_ * _], fn[x, y][qs[_x + _y].replace({_x: x, _y: y})]);\n\n    var c12 = c1.clone();\n    eq(c12.after(c2), c12);\n    eq(c12.after().length, 1);\n    eq(c12.after()[0], c2);\n    eq(c12(qs[x + y]).data, \'+\');\n    eq(c12(qs[x * y]).data, \'+\');\n\n    var c21 = c2.clone();\n    eq(c21.after(c1), c21);\n    eq(c21.after().length, 1);\n    eq(c21.after()[0], c1);\n    eq(c21(qs[x + y]).data, \'*\');\n    eq(c21(qs[x * y]).data, \'*\');\n  })(eq);\n});');