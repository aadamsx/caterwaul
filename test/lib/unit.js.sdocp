sdocp('sdoc::js::test/lib/unit', 'Unit testing library functions\n\nvar original_caterwaul = caterwaul.deglobalize();\n\nvar log_message = function (message) {\n  if (typeof console === \'undefined\') print(message);\n  else                                console.log(message);\n};\n\nvar on_error = function (name, e) {\n  log_message(\'Error at or shortly after eq count \' + eq_count + \' in test \' + name + \': \' + (e.description || e));\n  throw new Error(e);\n};\n\nvar eq_count = 0;\nvar eq = function (x, y, message) {\n  ++eq_count;\n  if (x == y) return true;\n  else        return on_error(current_test, (message || \'\') + x + \' !== \' + y);\n};\n\nvar current_test = null;\nvar test = function (name, f) {\n  log_message(\'[unit] starting test \' + (current_test = name));\n\n  try {\n    eq_count  = 0;\n    caterwaul = original_caterwaul.clone();\n    f();\n\n    var precompiled = 0;\n    for (var k in caterwaul.precompiled_internal_table) Object.hasOwnProperty.call(caterwaul.precompiled_internal_table, k) && ++precompiled;\n\n    if (! precompiled) {\n      eq_count  = 0;\n      log_message(\'[unit] reinitializing\');\n      caterwaul = caterwaul.reinitialize(caterwaul);\n      f();\n    }\n  } catch (e) {\n    on_error(name, e);\n  }\n};');