// Operation lexing tests.

test('lex-op', function () {
  var s = function (e, i) {eq(caterwaul.parse(e).inspect(), i)};

//   Pathological numerical cases.

  s('1.2e+3+4', '(+ (1.2e+3) (4))');
  s('1.2E10+5', '(+ (1.2E10) (5))');
  s('1E10+2',   '(+ (1E10) (2))');
  s('1E+10+4E+10', '(+ (1E+10) (4E+10))');

  s('0x14.serialize', '(. (0x14) (serialize))');
  s('0xE+5', '(+ (0xE) (5))');

  s('0644.serialize', '(. (0644) (serialize))');
  s('0x511e+10e+10', '(+ (0x511e) (10e+10))');

//   Regular expression inference.

  s('return /foo/g', '(return (/foo/g))');
  s('throw /foo/g', '(throw (/foo/g))');
  s('case /foo/g:', '(i; (case) (: (/foo/g) (<>)))');

  s('bar /foo/g', '(/ (/ (bar) (foo)) (g))');
  s('3.5 /foo/g', '(/ (/ (3.5) (foo)) (g))');
  s('false /foo/g', '(/ (/ (false) (foo)) (g))');
});

// Generated by SDoc 
