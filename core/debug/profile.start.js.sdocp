sdocp('sdoc::js::core/debug/profile.start', 'Profiling extensions for performance tuning | Spencer Tipping\nLicensed under the terms of the MIT source code license\n\nThis is the code used to start profiling. You\'ll also need to include js::core/debug/profile.stop to print the results.\n\nvar all_profiled_functions = {};\nvar recursion              = {};\nFunction.prototype.profiled = function (name, no_recursion) {\n  var f = this;\n  recursion[name] || (recursion[name] = no_recursion ? NaN : 0);\n  return function () {\n    var k = name + \' (\' + ++recursion[name] + \')\';\n    var data = all_profiled_functions[k] || (all_profiled_functions[k] = {invocations: 0, total: 0, max: 0});\n    var t1 = +new Date();\n    var result = f.apply(this, arguments);\n    var time = +new Date() - t1;\n\n    ++data.invocations;\n    data.total += time;\n    if (recursion[name] > 1) all_profiled_functions[name + \' (\' + (recursion[name] - 1) + \')\'].total -= time;\n    time > data.max && (data.max = time);\n    --recursion[name];\n    return result;\n  };\n};');