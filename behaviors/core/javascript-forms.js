// Javascript macro forms | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// This module creates macro forms optimized for hand-coded Javascript. They won't work well at all for Coffeescript or other variants that don't support the side-effect comma operator.

  caterwaul.configuration('core.js', function () {

// Adjective and adverb forms.
// These are designed to be fairly unusual in normal Javascript code (since we don't want collisions), but easy to type. Multiple precedence levels are provided to make it easier to avoid
// grouping operators.

    this.unary_adjective_form('it[_]', '_ /it').
         postfix_binary_adverb_form('_, it[_]', '_ /it[_]', '_ -it[_]');

// Destructuring function creation.
// This is a beautiful hack made possible by Internet Explorer. We can intercept cases of assigning into a function and rewrite them to create a function body. For example, f(x) = y becomes the
// regular assignment f = function (x) {return y}. Because this macro is repeatedly applied we get currying for free.

    var function_assignment_template = this.parse('_left = (function (_args) {return _right})');
    this.rmacro('_(_) = _', function (left, args, right) {return function_assignment_template.replace({_left: left, _args: args, _right: right})})});
// Generated by SDoc 
