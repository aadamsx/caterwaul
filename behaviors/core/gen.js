// Code generation methods | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// These methods provide easy ways to generate common code patterns. Previous to caterwaul 1.0 they were encoded as standard-library macros, which created a lot of module interdependence and
// macroexpansion overhead (especially since most of them weren't used frequently in regular code). Now they're regular methods that take syntax trees as arguments.

  caterwaul.configure(caterwaul.clone('core.quote core.js')(function () {
    var gen = this.namespace('gen');

// Scope creation.
// Creating a scope is one of the most common patterns. These methods create various kinds of scopes.

    gen.names_of(vars)    = vars.flatten(',').map(n[0], given[n]).unflatten(),
    gen.values_of(vars)   = vars.flatten(',').map(n[1], given[n]).unflatten(),

    gen.scope(vars, body) = qs[(function (_args) {return _body}).call(this, _values)].replace({_body: body, _args: gen.names_of(vars), _values: gen.values_of(vars)}),
// Generated by SDoc 
