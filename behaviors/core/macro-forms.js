// Systematic macro form meta-definitions | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// Before version 1.0 most caterwaul macros were defined ad-hoc; as such the standard library felt chaotic and irregular. Caterwaul 1.0 introduces macro-patterns, which are abstractions to make
// it easier to define regular and predictable syntax macros. Starting with caterwaul 1.0, many macros are defined in terms of their meaning rather than their appearance. For examples of this,
// see sdoc::js::behaviors/core/grammar (for a macro form definition), sdoc::js::behaviors/core/words (for macro definitions), and sdoc::js::behaviors/core/javascript-forms (for form
// definitions).

//   Defining a macro form.
//   You can define a new macro form using caterwaul's macro_form() method. This takes the name of the form to define and a function that accepts a name, definition, and form and performs the
//   actual macro definition. For example:

//   | my_caterwaul.macro_form('adverb', function (name, definition, form) {
//       this.macro(form.replace({_adverb: name}), definition);
//     });

  caterwaul.class_eval(function (def) {
    def('macro_form', this.right_variadic_binary(function (name, define) {
      var names = name + 's', form = name + '_form', forms = name + '_forms', v = this.variadic, rvb = this.right_variadic_binary;

      this.self_eval(function (def) {
        this.attr_lazy(names, Array);
        def(name, rvb(function (name, expander) {
          for (var fs = this[forms](), definition = this.ensure_expander(expander), i = 0, l = fs.length; i < l; ++i) define.call(this, name, definition, fs[i]);
          this[names]().push({name: name, definition: definition})}));

        this.attr_lazy(forms, Array);
        def(form, v(function (form) {
          for (var xs = this[names](), form = this.ensure_syntax(form), i = 0, l = xs.length; i < l; ++i) define.call(this, xs[i].name, xs[i].definition, form);
          this[forms]().push(form)}))})}))});
// Generated by SDoc 
