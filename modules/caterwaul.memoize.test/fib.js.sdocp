sdocp('sdoc::js::modules/caterwaul.memoize.test/fib', 'Fibonacci memoization test (trivial).\n\ntest(\'caterwaul.memoize.fib\', function () {\n  var c = caterwaul.clone(\'std memoize\');\n  c(function (eq) {\n    var memo = caterwaul.memoize.from(fn[c, as, f][this[as[0]] || (this[as[0]] = f.apply(c, as))]);\n    var c1   = 0;\n    var c2   = 0;\n    var fib  = fn[x][++c1, x < 2 ? x : fib(x - 1) + fib(x - 2)];\n    var fibm = memo(fn[x][++c2, x < 2 ? x : fibm(x - 1) + fibm(x - 2)]);\n\n    eq(fib(20), fibm(20));\n    eq(c2, 21);\n    eq(c1 > c2, true);\n\n    var c1old = c1;\n    var c2old = c2;\n\n    eq(fib(20), fibm(20));\n    eq(c1, c1old * 2);\n    eq(c2, c2old);\n  })(eq);\n});');