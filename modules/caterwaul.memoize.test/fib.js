// Fibonacci memoization test (trivial).

test('caterwaul.memoize.fib', function () {
  var c = caterwaul.clone('std memoize');
  c(function (eq) {
    var memo = caterwaul.memoize.from(fn[c, as, f][this[as[0]] || (this[as[0]] = f.apply(c, as))]);
    var c1   = 0;
    var c2   = 0;
    var fib  = fn[x][++c1, x < 2 ? x : fib(x - 1) + fib(x - 2)];
    var fibm = memo(fn[x][++c2, x < 2 ? x : fibm(x - 1) + fibm(x - 2)]);

    eq(fib(20), fibm(20));
    eq(c2, 21);
    eq(c1 > c2, true);

    var c1old = c1;
    var c2old = c2;

    eq(fib(20), fibm(20));
    eq(c1, c1old * 2);
    eq(c2, c2old);
  })(eq);
});
// Generated by SDoc 
