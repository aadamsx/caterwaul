// Caterwaul local standard library tests

test('caterwaul.std.local', function () {
  var fn = caterwaul.clone('std.locally');

  fn(function (eq) {
    eq(locally['std.fn'][fn[x][x + 1]](6), 7);
    eq(locally['std.fn'][fn[x, y][x + y](6, 7)], 13);
    eq(locally['std.fn'][fn_[10]](), 10);

    eq(locally['std.bind'][l[y = 5] in y + 1], 6);
    eq(locally['std.bind'][l[y = 5, a = 6] in y + a], 11);

    eq(locally['std.bind'][l*[x = 4, y = x] in x + y], 8);
    eq(locally['std.bind std.fn'][l*[fact = fn[n][n > 1 ? n * fact(n - 1) : 1]] in fact(5)], 120);

    eq(locally['std.bind'][z + 1, where[z = 5]], 6);
    eq(locally['std.bind'][q + w, where[q = 10, w = 100]], 110);

    eq(locally['std.bind'][x + y, where*[x = 4, y = x]], 8);
    eq(locally['std.bind std.fn'][fact(5), where*[fact = fn[n][n > 1 ? n * fact(n - 1) : 1]]], 120);

    eq(locally['std.cond'][5, when[true]], 5);
    eq(locally['std.cond'][5, when[false]], false);

    eq(locally['std.cond'][5, unless[true]], false);
    eq(locally['std.cond'][5, unless[false]], 5);

    eq(locally.std[fn[x][x + 1](6)], 7);
  }) (eq);
});
// Generated by SDoc 
