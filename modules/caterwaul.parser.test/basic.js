// Basic parser combinator tests.

test('caterwaul.parser.basic', function () {
  var c = caterwaul.clone('std parser');

  c(function (eq) {
    var p = caterwaul.parser.parsers;

    var a = p.c('a');
    eq(a('a').result, 'a');

    var abc = p.seq(p.c('a'), p.c('b'), p.c('c'));
    eq(abc('abc').result.join(','), 'a,b,c');
    eq(!! abc('abd'), false);
    eq(!! abc('ab'), false);

    var abBc = p.seq(p.c('a'), p.alt(p.c('b'), p.c('B')), p.c('c'));
    eq(abBc('abc').result.join(','), 'a,b,c');
    eq(abBc('aBc').result.join(','), 'a,B,c');
    eq(!! abBc('acc'), false);
    eq(!! abBc('aac'), false);
    eq(!! abBc('abb'), false);
    eq(!! abBc('abC'), false);
    eq(!! abBc('Abc'), false);

    var ab_c = p.seq(p.c('a'), p.opt(p.c('b')), p.c('c'));
    eq(ab_c('abc').result.join(','), 'a,b,c');
    eq(ab_c('ac').result.join(','), 'a,false,c');
    eq(!! ab_c('abbc'), false);
    eq(!! ab_c('adc'), false);
    eq(!! ab_c('aabc'), false);
  })(eq);
});
// Generated by SDoc 
