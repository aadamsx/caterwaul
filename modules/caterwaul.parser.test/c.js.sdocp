sdocp('sdoc::js::modules/caterwaul.parser.test/c', 'Tests for the constant parser.\n\ntest(\'caterwaul.parser.c\', function () {\n  var c = caterwaul.clone(\'std seq parser\');\n\n  c(function (eq) {\n    eq(peg[c(\'foo\')](\'foo\'), \'foo\');\n    eq(peg[c(\'foo\')](\'fop\'), false);\n    eq(peg[c(\'foo\')](\'fOo\'), false);\n    eq(peg[c(\'foo\')](\'Foo\'), false);\n\n    eq(!! peg[c([\'foo\', \'bar\'])], true);        // Check for errors initializing the parser\n\n    eq(peg[c([\'foo\', \'bar\'])](\'foo\'), \'foo\');\n    eq(peg[c([\'foo\', \'bar\'])](\'bar\'), \'bar\');\n    eq(peg[c([\'foo\', \'bar\'])](\'Bar\'), false);\n    eq(peg[c([\'foo\', \'bar\'])](\'Foo\'), false);\n\n    eq(peg[c([\'foo\', \'food\'])](\'foo\'), \'foo\');\n    eq(peg[c([\'foo\', \'food\'])](\'food\'), \'food\');\n    eq(peg[c([\'foo\', \'fooD\']) % [c(\'d\')] >> fn[xs][seq[~xs %[_]].join(\'\')]](\'food\'), \'food\');\n    eq(peg[c([\'foo\', \'fooD\']) % [c(\'d\')] >> fn[xs][seq[~xs %[_]].join(\'\')]](\'fooD\'), \'fooD\');\n\n    eq(peg[c({foo: 1, bar: 2})](\'foo\'), 1);\n    eq(peg[c({foo: 1, bar: 2})](\'bar\'), 2);\n    eq(peg[c({foo: 1, bar: 2})](\'bif\'), false);\n\n    eq(peg[c({foo: 1, b: 2})](\'foo\'), 1);\n    eq(peg[c({foo: 1, b: 2})](\'b\'), 2);\n    eq(peg[c({foo: 1, b: 2})](\'c\'), false);\n\n    eq(peg[c(/\\d+/, 1)](\'012345\')[0], \'012345\');\n    eq(peg[c(/\\d+/, 1)](\'0\')[0], \'0\');\n    eq(peg[c(/\\d+/, 1)](\'0abc\')[0], \'0\');\n    eq(peg[c(/\\d+/, 1)](\'01bc\')[0], \'01\');\n    eq(peg[c(/\\d+/, 1)](\'012bc\')[0], \'012\');\n    eq(peg[c(/\\d+/, 2)](\'012bc\')[0], \'012\');\n    eq(peg[c(/\\d+/, 3)](\'012bc\')[0], \'012\');\n    eq(peg[c(/\\d+/, 1)](\'0123bc\')[0], \'0123\');\n    eq(peg[c(/\\d+/, 2)](\'0123bc\')[0], \'0123\');\n    eq(peg[c(/\\d+/, 3)](\'0123bc\')[0], \'0123\');\n    eq(peg[c(/\\d+/, 4)](\'0123bc\')[0], \'0123\');\n    eq(peg[c(/\\d+/, 2)](\'0abc\'), false);\n    eq(peg[c(/\\d+/, 1)](\'abc\'), false);\n\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'alkawemo + quux\'), \'alkawemo\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_alkawemo + quux\'), \'_alkawemo\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_alkawemo+quux\'), \'_alkawemo\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_alkawemo2+quux\'), \'_alkawemo2\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_alkawemo2+quux\'), \'_alkawemo2\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_AlKaWeMo2+\'), \'_AlKaWeMo2\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_AlKa%wemo\'), \'_AlKa\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'$foo\'), false);\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar23\'), \'_foobar23\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar8++++++++++\'), \'_foobar8\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar7++++++++\'), \'_foobar7\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar6++++\'), \'_foobar6\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar5++\'), \'_foobar5\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar4+\'), \'_foobar4\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar2\'), \'_foobar2\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foobar\'), \'_foobar\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_fooba\'), \'_fooba\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foob\'), \'_foob\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'_foo\'), \'_foo\');\n    eq(peg[c(/[A-Za-z_][A-Za-z0-9_$]*/, 1) >> fn[x][x[0]]](\'3alkawemo2+quux\'), false);\n\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'Quotation\'), \'uotation\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'QuotatioN\'), \'uotatio\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'QuoTatioN\'), \'uo\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'FooBar\'), \'oo\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'Foobar\'), \'oobar\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'Foo bar\'), \'oo\');\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'F\'), false);\n    eq(peg[c(/[A-Z]([a-z]+)/, 2) >> fn[x][x[1]]](\'oobar\'), false);\n  })(eq);\n});');