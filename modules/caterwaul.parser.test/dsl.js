// DSL tests for the caterwaul parser.

test('caterwaul.parser.dsl', function () {
  var c = caterwaul.clone('std parser');

  c(function (eq) {
    var bind_test = peg[c('a')];
    eq(bind_test('a'), 'a');

    eq(peg[c('a') % c('b')]('ab').join(','), 'a,b');
    eq(peg[c('a') % (c('b') / c('c'))]('ab').join(','), 'a,b');
    eq(peg[c('a') % (c('b') / c('c'))]('ac').join(','), 'a,c');

    eq(peg[c('a') % c('b') % c('c')]('abc').join('|'), 'a|b|c');

    eq(peg[c('a') % c('b')[0]]('abbb').join('|'), 'a|b,b,b');
    eq(peg[c('a') % c('b')[0]]('ab').join('|'), 'a|b');
    eq(peg[c('a') % c('b')[1]]('ab').join('|'), 'a|b');
    eq(peg[c('a') % c('b')[2]]('ab'), false);

    eq(peg[c('a') % c('b')[0, 3]]('abbb').join('|'), 'a|b,b,b');
    eq(peg[c('a') % c('b')[0, 2]]('abbb').join('|'), 'a|b,b');
    eq(peg[c('a') % c('b')[0, 1]]('abbb').join('|'), 'a|b');
    eq(peg[c('a') % c('b')[1, 1]]('abbb').join('|'), 'a|b');

    eq(peg[c('a') % [c('b') / c('c')] % c('d') >>= fn[xs][xs.join('.')]]('abd'), 'a.b.d');
    eq(peg[c('a') % [c('b') / c('c')] % c('d') >>= fn[xs][xs.join('.')]]('acd'), 'a.c.d');
    eq(peg[c('a') % [c('b') / c('c')] % c('d') >>= fn[xs][xs.join('.')]]('ad'), 'a.false.d');
    eq(peg[c('a') % [c('b') / c('c')] % c('d') >>= fn[xs][xs.join('.')]]('ab'), false);
    eq(peg[c('a') % [c('b') / c('c')] % c('d') >>= fn[xs][xs.join('.')]]('ac'), false);

    eq(peg[c('a') >>= fn[x][x.length]]('a'), 1);

    eq(peg[c('a') % c('b')[1] >>= fn[xs]['#{xs.length}|#{xs.join("")}']]('abbbb'), '2|ab,b,b,b');
    eq(peg[c('a') % c('b')[1] >>= fn[xs]['#{xs.length}|#{xs.join("")}']]('ab'), '2|ab');
    eq(peg[c('a') % c('b')[1] >>= fn[xs]['#{xs.length}|#{xs.join("")}']]('a'), false);
  })(eq);
});
// Generated by SDoc 
