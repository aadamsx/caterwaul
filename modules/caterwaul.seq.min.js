caterwaul.tconfiguration('std','seq.core',function (){this.configure('std').shallow('seq',{core:fn_[this],define:fb[name,ctor,methods][this.seq[name]=this.util.extend(ctor,this.util.merge(new this.seq.core(),methods))]})});caterwaul.tconfiguration('std','seq.class.ana',function (){this.configure('seq.core').seq.define('ana',fn[f,xs][this.length=0,this.next=f,this.finite_bound=Array.prototype.push.apply(this,xs||[]),this.length=Infinity,this],{at:fn[n][n<0?this.at(this.finite_bound+n):n<this.finite_bound?this[n]:(this[n]=this.next.call(this,n>0?this.at(n-1):undefined),this.finite_bound=n+1,this[n])]})});caterwaul.tconfiguration('std','seq.ana',function (){let[ctransform=this.configure('seq.core seq.class.ana').seq.ana.anamorphic_constructor_transform(body)=qs[fn[x][_body,where*[t=this,$(n)=t.at(n),n=t.finite_bound]]].replace({_body:body}),ana=this.seq.ana] in this.rmacro(qs[seq.ana[_]],fn[body][with_gensyms[init][fn[init][new _class(_f,init)]].replace({_f:ctransform(body),_class:new this.ref(ana)})]).rmacro(qs[_<sa<_],fn[form,init][qs[seq.ana[_form](_init)].replace({_form:form,_init:init})])});caterwaul.configuration('seq',function (){this.configure('seq.ana')});