caterwaul.tconfiguration('std','seq.core',function (){this.shallow('seq',{core:fn_[null]/se[_.prototype={}]})}).tconfiguration('std continuation','seq.infinite.core',function (){this.configure('seq.core').seq.infinite=fn_[null]/se[_.prototype=new this.seq.core()]/se[_.def(name,ctor,h,t)=i[name]=ctor/se[_.prototype=new i()/se[_.h=h,_.t=t,_.constructor=ctor]],where[i=_],_.def('cons',fn[h,t][this._h=h,this._t=t],fn_[this._h],fn_[this._t]),_.def('k',fn[x][this._x=x],fn_[this._x],fn_[this])]}).tconfiguration('std','seq.infinite.y',function (){this.configure('seq.infinite.core').seq.infinite.def('y',fn[f,x][this._f=f,this._x=x],fn_[this._x],fn_[new this.constructor(this._f,this._f(this._x))])}).tconfiguration('std continuation','seq.infinite.class.transform',function (){this.configure('seq.infinite.core').seq.infinite/se[_.prototype.map(f)=new _.map(f,this)]/se[_.def('map',fn[f,xs][this._f=f,this._xs=xs],fn_[this._f(this._xs.h())],fn_[new this.constructor(this._f,this._xs.t())])]/se[_.prototype.filter(f)=new _.filter(f,this)]/se[_.def('filter',fn[f,xs][this._f=f,this._xs=xs],fn_[let*[f=this._f,next(s)(cc)=let[h=s.h()][f(h)?cc(h):call/tail[next(s.t())(cc)]]] in call/cc[next(this)]],fn_[new this.constructor(this._f,this._xs.t())])]}).tconfiguration('std continuation','seq.infinite.class.traversal',function (){this.configure('seq.infinite.core').seq.infinite.prototype/se[_.drop(f)=let*[next(s)(cc)=f(s.h())?cc(s.t()):call/tail[next(s.t())(cc)]] in call/cc[next(this)],_.take(f)=let*[xs=[],next(s)(cc)=let[h=s.h()][f(h)?cc(xs):(xs.push(h),call/tail[next(s.t())(cc)])]] in call/cc[next(this)]]}).configuration('seq',function (){this.configure('seq.core seq.infinite.core seq.infinite.y seq.infinite.class.transform seq.infinite.class.traversal')});