caterwaul.tconfiguration('std','seq.core',function (){this.shallow('seq',{core:fn_[null]/se[_.prototype=[]/se[_.constructor=ctor],where[ctor=_]]})}).tconfiguration('std','seq.finite.core',function (){let[push=Array.prototype.push][this.configure('seq.core').seq.finite=fc[xs][this.length=0,push.apply(this,xs||[])]/se[_.prototype=new this.seq.core()/se[_.constructor=ctor],where[ctor=_]]]}).tconfiguration('std','seq.finite.mutability',function (){let[push=Array.prototype.push,slice=Array.prototype.slice] in this.configure('seq.finite.core').seq.finite.prototype/se[_.push()=(push.apply(this,arguments),this),_.pop()=this[--this.length]/se[(function (){delete this[this.length]}).call(this)],_.concat(xs)=new this.constructor(this)/se[_.push.apply(_,slice.call(xs))]]}).tconfiguration('std','seq.finite.object',function (){let[own=Object.prototype.hasOwnProperty] in this.configure('seq.finite.core').seq.finite/se[_.keys(o,all)=new _()/se[(function (){for (var k in o)if (all||own.call(o,k))_.push(k)})()],_.values(o,all)=new _()/se[(function (){for (var k in o)if (all||own.call(o,k))_.push(o[k])})()],_.pairs(o,all)=new _()/se[(function (){for (var k in o)if (all||own.call(o,k))_.push([k,o[k]])})()],_.prototype.object(o)=(o||{})/se[this.each(fn[p][_[p[0]]=p[1]])]]}).tconfiguration('std opt','seq.finite.traversal',function (){this.configure('seq.finite.core seq.finite.mutability').seq.finite.prototype/se[_.map(f)=new this.constructor()/se[opt.unroll[i,this.length][_.push(f.call(this,this[i],i))]],_.filter(f)=new this.constructor()/se[opt.unroll[i,this.length][_.push(this[i]),when[f.call(this,this[i],i)]]],_.each(f)=this/se[opt.unroll[i,_.length][f.call(_,_[i],i)]],_.foldl(f,x)=let[x=arguments.length>1?x:this[0],xi=2-arguments.length][opt.unroll[i,this.length-xi][x=f.call(this,x,this[i+xi],i+xi)],x],_.foldr(f,x)=let[x=arguments.length>1?x:this[this.length-1],xi=3-arguments.length,l=this.length][opt.unroll[i,l-(xi-1)][x=f.call(this,this[l-(i+xi)],x,l-(i+xi))],x]]}).tconfiguration('std opt','seq.finite.zip',function (){this.configure('seq.finite.traversal').seq.finite/se[let[seq=_,slice=Array.prototype.slice][_.prototype.zip()=let[as=new seq([this].concat(slice.call(arguments))),options={f:fn_[new seq(arguments)],outer:false}][caterwaul.util.merge(options,as.pop()),when[as[as.length-1].constructor===Object],let[l=as.map(fn[x][x.length]).foldl(options.outer?fn[x,y][Math.max(x,y)]:fn[x,y][Math.min(x,y)]),f=options.f] in new this.constructor()/se[opt.unroll[i,l][_.push(f.apply({i:i},as.map(fn[x][x[i]]).slice()))]]]]]}).tconfiguration('std opt continuation','seq.finite.quantification',function (){this.configure('seq.finite.core').seq.finite.prototype/se[_.exists(f)=call/cc[fb[cc][opt.unroll[i,this.length][f.call(this,this[i],i)&&cc(this[i]||true)],false]],_.forall(f)=!this.exists(fn_[!f.apply(this,arguments)])]}).tconfiguration('std','seq.infinite.core',function (){this.configure('seq.core').seq.infinite=fn_[null]/se[_.prototype=new this.seq.core()/se[_.constructor=ctor],where[ctor=_]]/se[_.def(name,ctor,h,t)=i[name]=ctor/se[_.prototype=new i()/se[_.h=h,_.t=t,_.constructor=ctor]],where[i=_],_.def('cons',fn[h,t][this._h=h,this._t=t],fn_[this._h],fn_[this._t]),_.def('k',fn[x][this._x=x],fn_[this._x],fn_[this])]}).tconfiguration('std','seq.infinite.y',function (){this.configure('seq.infinite.core').seq.infinite.def('y',fc[f,x][this._f=f,this._x=x],fn_[this._x],fn_[new this.constructor(this._f,this._f(this._x))])}).tconfiguration('std continuation','seq.infinite.class.transform',function (){this.configure('seq.infinite.core').seq.infinite/se[_.prototype.map(f)=new _.map(f,this),_.def('map',fc[f,xs][this._f=f,this._xs=xs],fn_[this._f(this._xs.h())],fn_[new this.constructor(this._f,this._xs.t())]),_.prototype.filter(f)=new _.filter(f,this),_.def('filter',fc[f,xs][this._f=f,this._xs=let*[next(s)(cc)=f(s.h())?cc(s):call/tail[next(s.t())(cc)]] in call/cc[next(xs)]],fn_[this._xs.h()],fn_[new this.constructor(this._f,this._xs.t())])]}).tconfiguration('std continuation','seq.infinite.class.traversal',function (){let[finite=this.configure('seq.finite.core seq.finite.mutability').seq.finite] in this.configure('seq.infinite.core').seq.infinite.prototype/se[_.drop(f)=let*[next(s)(cc)=f(s.h())?call/tail[next(s.t())(cc)]:cc(s)] in call/cc[next(this)],_.take(f)=let*[xs=new finite(),next(s)(cc)=let[h=s.h()][f(h)?(xs.push(h),call/tail[next(s.t())(cc)]):cc(xs)]] in call/cc[next(this)]]}).configuration('seq',function (){this.configure('seq.core seq.finite.core seq.finite.object seq.finite.mutability seq.finite.traversal seq.finite.zip seq.finite.quantification '+'seq.infinite.core seq.infinite.y seq.infinite.class.transform seq.infinite.class.traversal')});