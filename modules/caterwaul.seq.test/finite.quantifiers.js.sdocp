sdocp('sdoc::js::modules/caterwaul.seq.test/finite.quantifiers', 'Finite sequence quantifier tests.\n\ntest(\'caterwaul.seq.finite.quantifier\', function () {\n  var c = caterwaul.clone(\'std seq\');\n\n  c(function (eq) {\n    var naturals = new caterwaul.seq.infinite.y(fn[x][x + 1], 0);\n    var two      = naturals.drop(fn[x][x < 2]);\n    var primes   = two.filter(fn[n][! two.take(fn[x][x <= Math.sqrt(n)]).exists(fn[k][n % k === 0])]);\n\n    var below_100 = primes.take(fn[x][x < 100]);\n    eq(below_100.toString(), \'seq[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\');\n\n    eq(below_100.forall(fn[x][x < 100]), true);\n    eq(below_100.exists(fn[x][x > 10]), true);\n    eq(below_100.exists(fn[x][x > 10 && x]), 11);\n    eq(below_100.exists(fn[x][x > 20 && x]), 23);\n  })(eq);\n});');