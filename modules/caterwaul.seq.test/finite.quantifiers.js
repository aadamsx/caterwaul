// Finite sequence quantifier tests.

test(function () {
  var c = caterwaul.clone('std seq');

  c(function (eq) {
    var naturals = new caterwaul.seq.infinite.y(fn[x][x + 1], 0);
    var two      = naturals.drop(fn[x][x < 2]);
    var primes   = two.filter(fn[n][! two.take(fn[x][x <= Math.sqrt(n)]).exists(fn[k][n % k === 0])]);

    var below_100 = primes.take(fn[x][x < 100]);
    eq(below_100.join(','), '2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97');

    eq(below_100.forall(fn[x][x < 100]), true);
    eq(below_100.exists(fn[x][x > 10]), 11);
    eq(below_100.exists(fn[x][x > 20]), 23);
  })(eq);
});

// Generated by SDoc 
