sdocp('modules/caterwaul.seq.test/infinite.transform.js.sdoc', 'Map and filter tests on infinite streams.\n\ntest(function () {\n  var c = caterwaul.clone(\'std seq\');\n  c(function (eq) {\n    var naturals = new caterwaul.seq.infinite.y(fn[x][x + 1], 0);\n    var evens1   = naturals.map(fn[x][x * 2]);\n    var evens2   = naturals.filter(fn[x][! (x & 1)]);\n\n    eq(naturals.h(), 0);\n    eq(evens1.h(), 0);\n    eq(evens2.h(), 0);\n\n    eq(naturals.t().h(), 1);\n    eq(evens1.t().h(), 2);\n    eq(evens2.t().h(), 2);\n\n    eq(naturals.t().t().h(), 2);\n    eq(evens1.t().t().h(), 4);\n    eq(evens2.t().t().h(), 4);\n\n    eq(naturals.t().t().t().h(), 3);\n    eq(evens1.t().t().t().h(), 6);\n    eq(evens2.t().t().t().h(), 6);\n\n    var big = evens1.filter(fn[x][x > 20000]);\n    eq(big.h(), 20002);\n    eq(big.t().h(), 20004);\n  })(eq);\n});\n');