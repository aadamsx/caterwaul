sdocp('modules/caterwaul.seq.test/finite.fold.js.sdoc', 'Finite sequence folding tests\n\ntest(function () {\n  var c = caterwaul.clone(\'std seq\');\n\n  c(function (eq) {\n    var xs = new caterwaul.seq.finite([1, 2, 3, 4, 5]);\n\n    eq(xs.foldl(fn[x, y][x + y]), 15);\n    eq(xs.foldl(fn[x, y][x + y], \'\'), \'12345\');\n    eq(xs.foldl(fn[x, y][\'(#{x + y})\'], \'\'), \'(((((1)2)3)4)5)\');\n\n    var ys = new caterwaul.seq.finite([1, 2, 3, 4]);\n\n    eq(ys.foldr(fn[x, y][x + y]), 10);\n    eq(ys.foldr(fn[x, y][x + y], \'\'), \'1234\');\n    eq(ys.foldr(fn[x, y][\'(#{x + y})\'], \'\'), \'(1(2(3(4))))\');\n\n    var zs = new caterwaul.seq.finite([3, 4]);\n\n    eq(zs.foldl(fn[x, y][Math.min(x, y)]), 3);\n    eq(zs.foldr(fn[x, y][Math.min(x, y)]), 3);\n    eq(zs.foldl(fn[x, y][Math.max(x, y)]), 4);\n    eq(zs.foldr(fn[x, y][Math.max(x, y)]), 4);\n  })(eq);\n});\n');