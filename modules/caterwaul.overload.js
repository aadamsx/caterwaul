// Operator/syntax overloading module | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// Operator overloading in JS is generally slow and error-prone (if you transform your whole program), but sometimes it's really useful. Operators that don't exist for some object end up falling
// back to the default Javascript operator behavior. This is also true when the object in question is null or undefined.

// You can use this module for a localized region of code by doing this:

// | locally.overload[...]

  caterwaul.tconfiguration('std seq', 'overload', function () {
    this.rmacro(qs[overload[_]], 
    });

// Generated by SDoc 
