#!/usr/bin/env node

// Waul: the offline precompiler for Caterwaul | Spencer Tipping
// Licensed under the terms of the MIT source code license

// Introduction.
// Caterwaul is useful as a library and an online compiler, but when performance is important you probably want to deliver precompiled code. Waul is a program that does exactly that. You write a
// regular file that invokes Caterwaul on a function, and Waul emits a Javascript file that contains the Caterwaul-compiled results. For example:

// | $ cat > test.waul <<EOF
//   caterwaul('js_all')(function ($) {
//     console.log('#{message} from caterwaul!')
//     -where [message = 'hello']})(caterwaul);
//   EOF
//   $ waul test.waul
//   $ node test.js
//   hello from caterwaul!
//   $

// Waul has some limitations:

// | 1. It cannot precompile any macros that generate refs (this includes the -eval- modifier, unfortunately, though as of 1.1.6 -using- works just fine).
//   2. You need to inform it about any Caterwaul extensions up-front (I'll explain how to do this).

// Extensions.
// Caterwaul can be extended with custom macros, and in order to precompile something that uses these extensions you'll have to inform Waul about them. You can do this with the --extension flag,
// like this:

// | $ waul --extension caterwaul.custom.js foo.waul

// This will result in Waul loading in the custom extensions before customizing the Caterwaul instance that is used inside foo.waul. Waul comes with the standard library built-in, but you can
// disable it:

// | $ waul --no-std foo.waul                              # just use Caterwaul core

// You can compile multiple files at once using multiple arguments. If you do this, each will be compiled to its own .js file.

// Running stuff.
// Waul can be used to execute things inside a node.js process as well as precompiling them. If you want to run something, use '--run' like this:

// | $ waul --run file.waul

// You can make this happen automatically by using a shebang line:

// | #!/path/to/waul --run
//   // Javascript code

// This will work because Caterwaul's parser recognizes # as a line comment marker. Note that if you use --run, only the file after --run will be executed. The others will be inactive arguments.
// Another way to do it is to symlink 'waul' as 'waulrun':

// | #!/usr/bin/env waulrun
//   // Javascript code

// Waul file format.
// A .waul file is a syntactic superset of a .js file. Any valid Javascript is valid Caterwaul, and because Caterwaul's parser is considerably more lenient than Javascript's, you can actually get
// away with quite a lot. In order to be compilable by Waul, your file must contain a toplevel function that looks like this:

// | caterwaul('configurations')(function ([parameters]) {
//     ...
//     })([arguments]);

// Waul will chuck a wobbly if your file doesn't have this form. Within the function, you can write things that are nonstandard Javascript. For example:

// | // NOTE: this example won't work until you write monad_syntax.
//   caterwaul('js_all monad_syntax')(function () {
//     console.log(x + 1 >>= x*x -given.x)})();

// Normally this would fail because you can't put arbitrary values on the left-hand side of an assignment, but because .waul files are never interpreted as Javascript it isn't a problem.

// Dependencies.
// This program depends on Caterwaul, which is baked in minified here. It includes the 'ui' library even though Waul itself doesn't use it. The reason is that Waul scripts are allowed to, so Waul
// needs to be prepared to precompile things that depend on it.

(function(a){return a(a)})(function(f,A,p){var aj=function(ar){return ar.split(/\s+/)},D=function(ar,at){return at&&at.call(ar,ar)||ar},o=function(ar){throw new Error(ar)},c=A||(function(){for(var ar=[],au="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$_",at=21,av;at>=0;--at){ar.push(au.charAt(Math.random()*64>>>0))}return ar.join("")})(),aa=(function(ar){return function(at){return[at||"",(++ar).toString(36),c].join("_")}})(0),Z=function(ar){return ar.substr(ar.length-22)===c},i=function(at,ar){return function(){return at.apply(ar,arguments)}},R=function(aw,at){for(var au=0,av=[],ar=at.length;au<ar;++au){av.push(aw(at[au],au))}return av},x=function(at,ar){return R(function(au){return au instanceof Array?x(at,au):at(au)})},ah=function(av){for(var au=0,at=aj(av),aw={},ar=at.length;au<ar;++au){aw[at[au]]=true}return t(aw)},af=(function(at){for(var ar in at){if(at.hasOwnProperty(ar)){return true}}})({toString:true})?function(aw){for(var av=1,ar=arguments.length,au;av<ar;++av){if(au=arguments[av]){for(var at in au){if(g(au,at)){aw[at]=au[at]}}}}return aw}:function(aw){for(var av=1,ar=arguments.length,au;av<ar;++av){if(au=arguments[av]){for(var at in au){if(g(au,at)){aw[at]=au[at]}}if(au.toString&&!/\[native code\]/.test(au.toString.toString())){aw.toString=au.toString}}}return aw},ae=aa("hash"),t=function(au){var ar=0;for(var at in au){l.call(au,at)&&(ar=at.length>ar?at.length:ar)}au[ae]=ar;return au},g=function(at,ar){return ar!=null&&!(ar.length>at[ae])&&l.call(at,ar)},l=Object.prototype.hasOwnProperty,ai=function(){var ar=function(){return ar.init.apply(ar,arguments)};return ar},ak=typeof caterwaul==="undefined"?p:caterwaul,aq=D(ai(),function(){this.deglobalize=function(){caterwaul=ak;return aq};af(this,{merge:af,map:R,rmap:x,gensym:aa,is_gensym:Z})}),ap=ah(". new ++ -- u++ u-- u+ u- typeof u~ u! ! * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || ? = += -= *= /= %= &= |= ^= <<= >>= >>>= : , return throw case var const break continue void else u; ;"),W=function(av){for(var au=0,at=[false];au<8;++au){at.push.apply(at,at)}for(var au=0,ar=av.length;au<ar;++au){at[av.charCodeAt(au)]=true}return at},an=W(".0123456789"),Y=W("0123456789"),z=W("0123456789abcdefABCDEFx"),O=W("eE"),j=W(" \n\r\t"),u=W("()[]{}?:"),r=W("([{?:"),y=W("+-*/%&|^!~=<>?:;.,"),M=W("\n\r"),k=W("gims"),S=W("'\"/"),n="/".charCodeAt(0),X="0".charCodeAt(0),am=ah("++ --"),ab=W("$_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"),V="*".charCodeAt(0),m="\\".charCodeAt(0),ad="x".charCodeAt(0),Q=".".charCodeAt(0),K="#".charCodeAt(0),N=R(ah,["function","( [ . [] ()","new delete","u++ u-- ++ -- typeof u~ u! u+ u-","* / %","+ -","<< >> >>>","< > <= >= instanceof in","== != === !==","&","^","|","&&","||","case","? = += -= *= /= %= &= |= ^= <<= >>= >>>=",":",",","return throw break continue void","var const","if else try catch finally for switch with while do",";"]),J=ah("= += -= *= /= %= &= ^= |= <<= >>= >>>= ~ ! new typeof u+ u- -- ++ u-- u++ ? if else function try catch finally for switch case with while do"),G=(function(au){for(var aw={},av=0,ar=au.length;av<ar;++av){for(var at in au[av]){g(au[av],at)&&(aw[at]=av)}}return t(aw)})(N),w=(function(au){for(var aw=[],ax=0,ar=au.length,av=null;av=au[ax],aw[ax]=true,ax<ar;++ax){for(var at in av){if(g(av,at)&&(aw[ax]=aw[ax]&&!g(J,at))){break}}}return aw})(N),C=ah("[] . () * / % + - << >> >>> < > <= >= instanceof in == != === !== & ^ | && || = += -= *= /= %= &= |= ^= <<= >>= >>>= , : ;"),ac=t({"function":2,"if":1,"do":1,"catch":1,"try":1,"for":1,"while":1,"with":1,"switch":1}),U=t({"if":"else","do":"while","catch":"finally","try":"catch"}),E=ah("[] ()"),al=ah("return throw break continue else"),F=ah("u+ u- u! u~ u++ u-- new typeof finally case var const void delete"),h=ah("; {"),ag=ah("i;"),L=ah("++ --"),q=t({"(":")","[":"]","{":"}","?":":"}),H=ah("[ ("),T=ah("?"),e=ah("function if for while catch void delete new typeof in instanceof"),B=ah("function"),v=aq.syntax_common={_replace:function(ar){return(ar.l=this.l)&&(this.l.r=ar),(ar.r=this.r)&&(this.r.l=ar),this},_append_to:function(ar){return ar&&ar._append(this),this},_reparent:function(ar){return this.p&&this.p[0]===this&&(this.p[0]=ar),this},_fold_l:function(ar){return this._append(this.l&&this.l._unlink(this)||a)},_append:function(ar){return(this[this.length++]=ar)&&(ar.p=this),this},_fold_r:function(ar){return this._append(this.r&&this.r._unlink(this)||a)},_sibling:function(ar){return ar.p=this.p,(this.r=ar).l=this},_fold_lr:function(){return this._fold_l()._fold_r()},_fold_rr:function(){return this._fold_r()._fold_r()},_wrap:function(ar){return ar.p=this._replace(ar).p,this._reparent(ar),delete this.l,delete this.r,this._append_to(ar)},_unlink:function(ar){return this.l&&(this.l.r=this.r),this.r&&(this.r.l=this.l),delete this.l,delete this.r,this._reparent(ar)},pop:function(){return --this.length,this},push:function(ar){return this[this.length++]=ar||a,this},id:function(){var ar=aa("id");return(this.id=function(){return ar})()},is_caterwaul_syntax:true,each:function(au){for(var at=0,ar=this.length;at<ar;++at){au(this[at],at)}return this},map:function(au){for(var av=new this.constructor(this),at=0,ar=this.length;at<ar;++at){av.push(au(this[at],at)||this[at])}return av},reach:function(ar){ar(this);this.each(function(at){at.reach(ar)});return this},rmap:function(at){var ar=at(this);return !ar||ar===this?this.map(function(au){return au.rmap(at)}):ar===true?this:ar.rmap===p?new this.constructor(ar):ar},peach:function(ar){this.each(function(at){at.peach(ar)});ar(this);return this},pmap:function(at){var ar=this.map(function(au){return au.pmap(at)});return at(ar)},clone:function(){return this.rmap(function(){return false})},collect:function(at){var ar=[];this.reach(function(au){at(au)&&ar.push(au)});return ar},replace:function(ar){var at;return l.call(ar,this.data)&&(at=ar[this.data])?at.constructor===String?D(this.map(function(au){return au.replace(ar)}),function(){this.data=at}):at:this.map(function(au){return au.replace(ar)})},repopulated_with:function(ar){return new this.constructor(this.data,ar)},with_data:function(ar){return new this.constructor(ar,Array.prototype.slice.call(this))},change:function(at,ar){return D(new this.constructor(this.data,Array.prototype.slice.call(this)),function(au){au[at]=ar})},compose_single:function(ar,at){return this.change(ar,at(this[ar]))},slice:function(at,ar){return new this.constructor(this.data,Array.prototype.slice.call(this,at,ar))},traverse:function(ar){ar({entering:this});ar({exiting:this.each(function(at){at.traverse(ar)})});return this},flatten:function(ar){ar=ar||this.data;return ar!==this.data?this.as(ar):!(g(C,ar)&&this.length)?this:g(J,ar)?D(new this.constructor(ar),i(function(au){for(var at=this;at&&at.data===ar;at=at[1]){au.push(at[0])}au.push(at)},this)):D(new this.constructor(ar),i(function(av){for(var at=this,au=[];at.data===ar;at=at[0]){at[1]&&au.push(at[1])}au.push(at);for(at=au.length-1;at>=0;--at){av.push(au[at])}},this))},unflatten:function(){var at=this,ar=g(J,this.data);return this.length<=2?this:D(new this.constructor(this.data),function(aw){if(ar){for(var av=0,au=at.length-1;av<au;++av){aw=aw.push(at[av]).push(av<au-2?new at.constructor(at.data):at[av])[1]}}else{for(var av=at.length-1;av>=1;--av){aw=aw.push(av>1?new at.constructor(at.data):at[0]).push(at[av])[0]}}})},as:function(ar){return this.data===ar?this:new this.constructor(ar).push(this)},bindings:function(at){var ar=at||{};this.reach(function(au){if(au.binds_a_value){ar[au.data]=au.value}});return ar},expressions:function(at){var ar=at||{};this.reach(function(au){if(au.binds_an_expression){ar[au.data]=au.e}});return ar},contains:function(av){var ar=av(this);if(ar){return ar}for(var au=0,at=this.length;au<at;++au){if(ar=this[au].contains(av)){return ar}}},match:function(au,av){au=au.constructor===String?aq.parse(au):au;av||(av={_:au});if(this.is_wildcard()){return av[this.data]=au,av}else{if(this.length===au.length&&this.data===au.data){for(var at=0,ar=this.length;at<ar;++at){if(!this[at].match(au[at],av)){return null}}return av}}},toString:function(){var ar=[""];this.serialize(ar);return ar.join("")},structure:function(){if(this.length){return"("+['"'+this.data+'"'].concat(R(function(ar){return ar.structure()},this)).join(" ")+")"}else{return this.data}}};aq.syntax_subclass=function(au){var at=Array.prototype.slice.call(arguments,1),ar=function(){return au.apply(this,arguments)};af.apply(this,[ar.prototype,v].concat(at));ar.prototype.constructor=ar;return ar};var b=aq.parse_hex=function(av){for(var ar=0,au=0,at=av.length,aw;au<at;++au){ar*=16,ar+=(aw=av.charCodeAt(au))<=58?aw-48:(aw&95)-55}return ar},ao=aq.parse_octal=function(av){for(var ar=0,au=0,at=av.length;au<at;++au){ar*=8,ar+=av.charCodeAt(au)-48}return ar},d=aq.unescape_string=function(aw){for(var av=0,ax,at=aw.length,ar=[],au=false;av<at;++av){if(au){au=false,ar.push((ax=aw.charAt(av))==="\\"?"\\":ax==="n"?"\n":ax==="r"?"\r":ax==="b"?"\b":ax==="f"?"\f":ax==="0"?"\u0000":ax==="t"?"\t":ax==="v"?"\v":ax==='"'||ax==="'"?ax:ax==="x"?String.fromCharCode(b(aw.substring(av,++av+1))):ax==="u"?String.fromCharCode(b(aw.substring(av,(av+=3)+1))):String.fromCharCode(ao(aw.substring(av,(av+=2)+1))))}else{if((ax=aw.charAt(av))==="\\"){au=true}else{ar.push(ax)}}}return ar.join("")};aq.javascript_tree_type_methods={is_string:function(){return/['"]/.test(this.data.charAt(0))},as_escaped_string:function(){return this.data.substr(1,this.data.length-2)},is_number:function(){return/^-?(0x|\d|\.\d+)/.test(this.data)},as_number:function(){return Number(this.data)},is_boolean:function(){return this.data==="true"||this.data==="false"},as_boolean:function(){return this.data==="true"},is_regexp:function(){return/^\/./.test(this.data)},as_escaped_regexp:function(){return this.data.substring(1,this.data.lastIndexOf("/"))},is_array:function(){return this.data==="["},as_unescaped_string:function(){return d(this.as_escaped_string())},is_wildcard:function(){return this.data.charCodeAt(0)===95},is_identifier:function(){return this.length===0&&/^[A-Za-z_$]\w*$/.test(this.data)&&!this.is_boolean()&&!this.is_null_or_undefined()&&!g(ap,this.data)},has_grouped_block:function(){return g(ac,this.data)},is_block:function(){return g(h,this.data)},is_blockless_keyword:function(){return g(al,this.data)},is_null_or_undefined:function(){return this.data==="null"||this.data==="undefined"},is_constant:function(){return this.is_number()||this.is_string()||this.is_boolean()||this.is_regexp()||this.is_null_or_undefined()},left_is_lvalue:function(){return/=$/.test(this.data)||/\+\+$/.test(this.data)||/--$/.test(this.data)},is_empty:function(){return !this.length},has_parameter_list:function(){return this.data==="function"||this.data==="catch"},has_lvalue_list:function(){return this.data==="var"||this.data==="const"},is_dereference:function(){return this.data==="."||this.data==="[]"},is_invocation:function(){return this.data==="()"},is_contextualized_invocation:function(){return this.is_invocation()&&this[0].is_dereference()},is_invisible:function(){return g(ag,this.data)},is_binary_operator:function(){return g(C,this.data)},is_prefix_unary_operator:function(){return g(F,this.data)},is_postfix_unary_operator:function(){return g(L,this.data)},is_unary_operator:function(){return this.is_prefix_unary_operator()||this.is_postfix_unary_operator()},accepts:function(ar){return g(U,this.data)&&U[this.data]===(ar.data||ar)}};aq.javascript_tree_serialization_methods={ends_with_block:function(){var ar=this[ac[this.data]];return this.data==="{"||g(ac,this.data)&&(this.data!=="function"||this.length===3)&&ar&&ar.ends_with_block()},serialize:function(av){var at=this.length,aw=this.data,ar=";\n",au=function(ax){if(ab[av[av.length-1].charCodeAt(0)]===ab[ax.charCodeAt(0)]){av.push(" ",ax)}else{av.push(ax)}};switch(at){case 0:if(g(al,aw)){return au(aw.replace(/^u/,""))}else{if(g(q,aw)){return au(aw),au(q[aw])}else{return au(aw)}}case 1:if(g(F,aw)||g(al,aw)){return au(aw.replace(/^u/,"")),this[0].serialize(av)}else{if(g(q,aw)){return au(aw),this[0].serialize(av),au(q[aw])}else{if(g(C,aw)){return au("/* unary "+aw+" node */"),this[0].serialize(av)}else{return this[0].serialize(av),au(aw)}}}case 2:if(g(E,aw)){return this[0].serialize(av),au(aw.charAt(0)),this[1].serialize(av),au(aw.charAt(1))}else{if(g(ac,aw)){return au(aw),this[0].serialize(av),this[1].serialize(av)}else{if(g(ag,aw)){return this[0].serialize(av),this[1].serialize(av)}else{if(aw===";"){return this[0].serialize(av),au(ar),this[1].serialize(av)}else{return this[0].serialize(av),au(aw),this[1].serialize(av)}}}}default:if(g(T,aw)){return this[0].serialize(av),au(aw),this[1].serialize(av),au(":"),this[2].serialize(av)}else{if(g(ac,aw)){return this.accepts(this[2])&&!this[1].ends_with_block()?(au(aw),this[0].serialize(av),this[1].serialize(av),au(ar),this[2].serialize(av)):(au(aw),this[0].serialize(av),this[1].serialize(av),this[2].serialize(av))}else{return this.unflatten().serialize(av)}}}}};aq.ref_common=af({},aq.javascript_tree_type_methods,aq.javascript_tree_serialization_methods,{replace:function(ar){var at;return l.call(ar,this.data)&&(at=ar[this.data])?at.constructor===String?D(new this.constructor(this.value),function(){this.data=at}):at:this},length:0});aq.ref=aq.syntax_subclass(function(at,ar){if(at instanceof this.constructor){this.value=at.value,this.data=at.data}else{this.value=at,this.data=aa(ar&&ar.constructor===String?ar:"ref")}},aq.ref_common,{binds_a_value:true});aq.expression_ref=aq.syntax_subclass(function(at,ar){if(at instanceof this.constructor){this.e=at.e,this.data=at.data}else{this.e=at,this.data=aa(ar&&ar.constructor===String?ar:"e")}},aq.ref_common,{binds_an_expression:true});aq.syntax=aq.syntax_subclass(function(ax){if(ax instanceof this.constructor){this.data=ax.data,this.length=0}else{this.data=ax&&ax.toString();this.length=0;for(var av=1,ar=arguments.length,au;au=arguments[av],av<ar;++av){for(var at=0,az=au.length,aw,ay;au instanceof Array?(aw=au[at],at<az):(aw=au,!at);++at){this._append((ay=aw.constructor)===String||ay===Number||ay===Boolean?new this.constructor(aw):aw)}}}},aq.javascript_tree_type_methods,aq.javascript_tree_serialization_methods);var a=aq.empty=new aq.syntax("");aq.parse=function(ar){if(ar.constructor===aq.syntax){return ar}var aN=ar.toString(),ax=0,aZ=0,aK=true,aJ=false,a1=false,a0=false,aO=0,aL="",aW=0,aT=aN.length,aE=function(a3){return aN.charCodeAt(a3)},aC=[],aS=null,aA=null,ay=null,at=R(function(){return[]},N),az=[],aM=[a],aU=function(a3){return aM.push(a3),a3},aP=function(a3){return aA?aA._sibling(aA=a3):(aA=a3._append_to(ay)),aU(a3)},au=this.syntax,aB=[];if(aT===0){return a}while((ax=aW)<aT){while(j[aZ=aE(aW)]&&aW<aT){ax=++aW}aJ=a0=a1=aL=false;if(u[aZ]){aL=!!++aW;aK=r[aZ]}else{if(aZ===n&&aE(aW+1)===V&&(aW+=2)){while(++aW<aT&&aE(aW)!==n||aE(aW-1)!==V){}aL=!++aW}else{if(aZ===n&&aE(aW+1)===n){while(++aW<aT&&!M[aE(aW)]){}aL=false}else{if(aZ===K){while(++aW<aT&&!M[aE(aW)]){}aL=false}else{if(S[aZ]&&(aO=aZ)&&aK&&!(aK=!(aL=aN.charAt(aW)))){while(++aW<aT&&(aZ=aE(aW))!==aO||aJ){aJ=!aJ&&aZ===m}while(++aW<aT&&k[aE(aW)]){}aL=true}else{if(aZ===X&&z[aE(aW+1)]){while(++aW<aT&&z[aE(aW)]){}aK=!(aL=true)}else{if(an[aZ]&&(aZ!==Q||Y[aE(aW+1)])){while(++aW<aT&&(Y[aZ=aE(aW)]||(a1^(a1|=aZ===Q))||(a0^(a0|=O[aZ]&&++aW)))){}while(aW<aT&&Y[aE(aW)]){++aW}aK=!(aL=true)}else{if(y[aZ]&&(aL=aK?"u":"",aK=true)){while(aW<aT&&y[aE(aW)]&&g(ap,aL+aN.charAt(aW))){aL+=aN.charAt(aW++)}aK=!g(am,aL)}else{while(++aW<aT&&(ab[aZ=aE(aW)]||aZ>127)){}aK=g(ap,aL=aN.substring(ax,aW))}}}}}}}}if(aW===ax){throw new Error('Caterwaul lex error at "'+aN.substr(ax,40)+'" with leading context "'+aN.substr(ax-40,40)+'" (probably a Caterwaul bug)')}if(aL===false){continue}aL=aL===true?aN.substring(ax,aW):aL==="u;"?";":aL;aL===aS?(aC.pop(),aS=aC[aC.length-1],aA=aA?aA.p:ay,ay=null):(g(q,aL)?(aC.push(aS=q[aL]),ay=aP(aU(new au(aL))),aA=null):aP(aU(new au(aL))),g(G,aL)&&at[G[aL]].push(aA||ay));aK|=aL===")"&&aA.l&&g(ac,aA.l.data)}for(var aW=0,aT=at.length,aI,a2;a2=at[aW],aI=w[aW],aW<aT;++aW){for(var aV=aI?0:a2.length-1,aH=a2.length,aX=aI?1:-1,aF,aY,aG;aI?aV<aH:aV>=0;aV+=aX){if(g(C,aY=(aF=a2[aV]).data)){aF._fold_lr()}else{if(g(H,aY)&&aF.l&&!((aG=aF.l.l)&&g(ac,aG.data))&&(aF.l.data==="."||(aF.l.data==="function"&&aF.l.length===2)||!(g(ap,aF.l.data)||g(e,aF.l.data)))){az.push(aF.l._wrap(aU(new au(aY+q[aY]))).p._fold_r())}else{if(g(L,aY)){aF._fold_l()}else{if(g(F,aY)){aF._fold_r()}else{if(g(T,aY)){aF._fold_lr(),aB.push(aF)}else{if(g(ac,aY)&&aF.r&&aF.r.data!==":"){for(var aQ=0,aD=ac[aY];aQ<aD&&aF.r&&!g(h,aF.r.data);++aQ){aF._fold_r()}aF.r&&(aF.r.data===";"?aF.push(a):aF._fold_r());if(g(U,aY)&&U[aY]===(aF.r&&aF.r.r&&aF.r.r.data)){aF._fold_r().pop()._fold_r()}else{if(g(U,aY)&&U[aY]===(aF.r&&aF.r.data)){aF._fold_r()}}}else{if(g(al,aY)){aF.r&&aF.r.data!==";"&&aF._fold_r()}}}}}}}}}for(var aW=aM.length-1,a2;aW>=0;--aW){(a2=aM[aW]).r&&a2._wrap(aU(new au("i;"))).p._fold_r()}for(var aW=0,aT=az.length,a2,av;aW<aT;++aW){(av=(a2=az[aW])[1]=a2[1][0]||a)&&(av.p=a2)}for(var aW=0,aT=aB.length,a2,aR,aw;aW<aT;++aW){aR=(a2=aB[aW]).length,aw=a2[0],a2[0]=a2[aR-2],a2[1]=aw,a2[2]=a2[aR-1],a2.length=3}while(aA.p){aA=aA.p}for(var aW=aM.length-1,a2;aW>=0;--aW){delete (a2=aM[aW]).p,delete a2.l,delete a2.r}return aA};(function(){var ar=aq.parse("var _bindings; return(_expression)"),av=aq.parse("_variable = _base._variable"),au=aq.parse("undefined = void(0)"),at=aq.parse("(function (_bindings) {return(_body)}).call(this, _expressions)");aq.compile=function(aH,aB,aG){aG=af({gensym_renaming:true},aG);aH=aq.late_bound_tree(aH);var ay=af({},this._environment||{},aB||{},aH.bindings()),aD=[au],aF=aa("base");for(var aA in ay){if(l.call(ay,aA)&&aA!=="this"){aD.push(av.replace({_variable:aA,_base:aF}))}}var aE=new this.syntax(",",aD).unflatten(),aw=ar.replace({_bindings:aE,_expression:aH});if(aG.gensym_renaming){var az=this.gensym_rename_table(aw);for(var aA in ay){l.call(ay,aA)&&(ay[az[aA]||aA]=ay[aA])}aw=aw.replace(az);aF=az[aF]}var ax=aw.toString();try{return(new Function(aF,ax)).call(ay["this"],ay)}catch(aC){throw new Error((aC.message||aC)+" while compiling "+ax)}};aq.late_bound_tree=function(ax,aw){var aB=af({},aw||{},ax.expressions()),aA=new aq.syntax(","),az=new aq.syntax(",");for(var ay in aB){if(l.call(aB,ay)){aA.push(new aq.syntax(ay)),az.push(aB[ay])}}return aA.length?at.replace({_bindings:aA.unflatten(),_expressions:az.unflatten(),_body:ax}):ax};aq.gensym_rename_table=function(aE){var aD={},aB=[];aE.reach(function(aF){var aG=aF.data;if(Z(aG)){aD[aG]||aB.push(aG)}aD[aG]=aG.replace(/^(.*)_[a-z0-9]+_.{22}$/,"$1")||"anon"});var aw={},aC=function(aF){if(!(aF in aD)){return aF}var aG=aw[aF]||0;while(aD[aF+(++aG).toString(36)]){}return aF+(aw[aF]=aG).toString(36)};for(var ax={},az=0,ay=aB.length,aA;az<ay;++az){ax[aA=aB[az]]||(aD[ax[aA]=aC(aD[aA])]=true)}return ax}})();var P=function(at){for(var au=at.split(/\s+/),av=1,ar=au.length,aw=aq[au[0]]();av<ar;++av){aw=aq[au[av]](aw)}return aw};aq.init=function(ar){ar||(ar=function(at){return true});return ar.constructor===Function?D((function(){var at=function(aw,au,av){return typeof aw==="function"||aw.constructor===String?aq.compile(at.call(at,aq.parse(aw)),au,av):aw.rmap(function(ax){return ar.call(at,ax,au,av)})};return at})(),function(){this.global=aq,this.macroexpander=ar}):P(ar)};aq.initializer=f;aq.clone=function(){return D(f(f,c).deglobalize(),function(){for(var ar in aq){this[ar]||(this[ar]=aq[ar])}})};aq.modules=[];aq.module=function(at,ar,au){if(arguments.length===1){return aq[at+"_initializer"]}if(!(at+"_initializer" in aq)){aq.modules.push(at)}au||(au=ar,ar=null);(aq[at+"_initializer"]=ar?aq(ar)(au):au)(aq);return aq};var s=aq.parse("(function (f) {return f(f)})(_x)"),I=aq.parse("module(_name, _f)");aq.replicator=function(){for(var av=0,au=this.modules,aw=[],at=au.length;av<at;++av){aw.push(I.replace({_name:"'"+au[av]+"'",_f:this.parse(this.module(au[av]))}))}for(var av=0,at=aw.length,ar=new this.syntax(".",s.replace({_x:this.parse(this.initializer)}));av<at;++av){ar.push(aw[av])}return ar.unflatten()};return caterwaul=aq});
caterwaul.module("std.macro",function(c){var b=function(g){var d=function(h){if(h.constructor===Array){for(var k=0,j=h.length,m=[];k<j;++k){m.push(d(h[k]))}return function(l){for(var o=m.length-1,q;o>=0;--o){if(q=m[o].call(this,l)){return q}}}}else{return h.constructor===String?d(c.parse(h)):h.constructor===c.syntax?g.call(this,h):h}};return d};c.pattern=b(function(d){return function(g){return d.match(g)}});c.expander=b(function(d){return function(g){return d.replace(g)}});c.alternatives=b(function(d){throw new Error("must use replacer functions with caterwaul.alternatives()")});c.reexpander=function(g){var d=c.expander(g);return function(h){var i=d.call(this,h);return i&&this(i)}};var a=function(d){return function(h,j){var i=c.pattern(h),g=d(j);return function(k){var l=i.call(this,k);return l&&g.call(this,l)}}};c.replacer=a(c.expander);c.rereplacer=a(c.reexpander);c.macroexpand=function(d){return c(c.alternatives(Array.prototype.slice.call(arguments,1)))(d)}});caterwaul.module("std.anon",function(a){a.anonymizer=function(){for(var d={},c=0,b=arguments.length;c<b;++c){d[arguments[c]]=a.gensym(arguments[c])}return function(g){return a.parse(g).replace(d)}}});caterwaul.module("std.js",function(a){a.js=function(c){var h=function(Q){var Y=Q.data,N=Y.charAt(0),S=a.syntax;if(N!=="'"&&N!=='"'||!/#\{[^\}]+\}/.test(Y)){return false}for(var R=[],Z=[],U=1,T=Y.length-1,X=0,V=false,O=1,W;U<T;++U){if(X){if((W=Y.charAt(U))==="}"){--X||(R.push(Y.substring(O,U)),Z.push(true))&&(O=U+1),V=false}else{X+=W==="{"}}else{if((W=Y.charAt(U))==="#"){V=true}else{if(W==="{"&&V){R.push(Y.substring(O,U-1)),Z.push(false),O=U+1,++X}else{V=false}}}}R.push(Y.substring(O,T)),Z.push(false);for(var P=new RegExp("\\\\"+N,"g"),U=0,T=R.length;U<T;++U){R[U]=Z[U]?this(a.parse(R[U].replace(P,N)).as("(")):new S(N+R[U]+N)}return new S("+",R).unflatten().as("(")};var J=a.parse("var _x = _y"),M=a.parse("_x = _y"),G=a.parse("result"),L=a.parse("function (_formals) {_befores; var result = _result; _afters; return result}"),H=a.parse("function (_formals) {_befores; return _result}"),i=a.parse("_f = _x"),I=function(N){return N.is_empty()&&N.data==="result"},w=a.rereplacer("_f(_xs) = _y",function(W){for(var X=[],ab=[],ac=[],N=W._xs.flatten(","),V=0,T=N.length;V<T;++V){(ac.length||N[V].contains(I)?ac:ab.length||N[V].length?ab:X).push(N[V])}for(var S=[ab,ac],V=0,T=S.length;V<T;++V){for(var R=S[V],U=0,Z=R.length,Q;U<Z;++U){R[U]=(Q=M.match(R[U]))&&Q._x.is_empty()?J.replace(Q):R[U].as("(")}}var Y=X.length?new a.syntax(",",X).unflatten():a.empty,P=ab.length?new a.syntax(";",ab).unflatten():a.empty,O=ac.length?new a.syntax(";",ac).unflatten():a.empty,aa=i.replace({_f:W._f,_x:ac.length?L:H});return aa.replace({_formals:Y,_befores:P,_afters:O,_result:W._y})});var y=function(O){var Q=O.data,P,N;if((Q==="/"||Q==="|")&&(P=O[0]).data===Q&&P[1]&&P[1].data==="u-"&&(N=P[1][0])){return new a.syntax("()",N,this(O[0][0]).flatten(Q).push(this(O[1])).with_data(",").unflatten())}};var F=function(Q){var S=Q.data,R,P;if((S==="/"||S==="|")&&(R=Q[0]).data===S&&R[1]&&R[1].data==="u~"&&(P=R[1][0])){var O=[].slice.call(this(Q[0][0]).flatten(S)),N=O.shift();return new a.syntax("()",new a.syntax(".",new a.syntax("(",N),P),new a.syntax(",",O,this(Q[1])).unflatten())}};var o=a.parse("_f(_x)"),j=a.rereplacer("_x /!_f",function(N){return o.replace({_f:N._f,_x:this(N._x).flatten("/").with_data(",").unflatten()})});var l=a.pattern("_literal._modifier"),E=function(O,P,N){var Q=O.literal_modifiers[P];return Q.hasOwnProperty(N)&&Q[N]},u=function(P){var O=l.call(this,P),N,Q;if(O&&(N=O._literal)&&(Q=N.is_identifier()?E(this,"identifier",O._modifier.data):N.is_array()?E(this,"array",O._modifier.data):N.is_regexp()?E(this,"regexp",O._modifier.data):N.is_number()?E(this,"number",O._modifier.data):N.is_string()?E(this,"string",O._modifier.data):null)){return Q.call(this,N)}};var A=a.pattern("_modifier[_expression]"),k=a.pattern("_expression /_modifier"),C=a.pattern("_expression -_modifier"),K=a.pattern("_modifier in _expression"),z=a.pattern("_expression |_modifier"),B=a.pattern("_expression, _modifier"),v=a.pattern("_modifier._parameters"),m=a.pattern("_modifier[_parameters]"),D=a.pattern("_expression <_modifier> _parameters"),g=a.pattern("_expression -_modifier- _parameters"),b=function(S){var N,O=D.call(this,S)||g.call(this,S);if(O&&this.parameterized_modifiers.hasOwnProperty(N=O._modifier.data)){var R=this.parameterized_modifiers[N].call(this,O);if(R){return R}}var Q=A.call(this,S)||k.call(this,S)||C.call(this,S)||K.call(this,S)||z.call(this,S)||B.call(this,S);if(Q){var P=v.call(this,Q._modifier)||m.call(this,Q._modifier);if(P){Q._modifier=P._modifier;Q._parameters=P._parameters;return this.parameterized_modifiers.hasOwnProperty(N=Q._modifier.data)&&this.parameterized_modifiers[N].call(this,Q)}else{return this.modifiers.hasOwnProperty(N=Q._modifier.data)&&this.modifiers[N].call(this,Q)}}};var d=function(N){return h.call(this,N)||u.call(this,N)||N.length&&(b.call(this,N)||w.call(this,N)||y.call(this,N)||F.call(this,N)||j.call(this,N))},q=c?a(function(N){return c.call(this,N)||d.call(this,N)}):a(d);q.modifiers={};q.parameterized_modifiers={};q.literal_modifiers={regexp:{},array:{},string:{},number:{},identifier:{}};return q}});caterwaul.module("std.js-literals",function(a){a.js_literals=function(c){var b=a.parse("function (_) {return _body}");(function(d){d.x=a.reexpander(function(h){return h.with_data(h.data.replace(/\s+/g,""))});var g=a.parse("_regexp.exec(_)");d.qf=function(h){return b.replace({_body:g.replace({_regexp:h})})}})(c.literal_modifiers.regexp);(function(d){d.qw=a.reexpander(function(o){for(var q=new a.syntax("["),g=new a.syntax(","),j=o.data.charAt(0),m=o.as_escaped_string().split(/\s+/),k=0,h=m.length;k<h;++k){g.push(new a.syntax(j+m[k]+j))}return q.push(g.unflatten())});d.qh=a.reexpander(function(o){for(var q=new a.syntax("{"),g=new a.syntax(","),j=o.data.charAt(0),m=o.as_escaped_string().split(/\s+/),k=0,h=m.length;k<h;k+=2){g.push(new a.syntax(":",new a.syntax(j+m[k]+j),new a.syntax(j+m[k+1]+j)))}return q.push(g.unflatten())});d.qr=a.reexpander(function(g){return g.with_data("/"+g.as_escaped_string().replace(/\//g,"\\/")+"/")});d.qs=function(g){return new a.ref(a.parse(g.as_unescaped_string()))};d.qf=a.reexpander(function(g){return b.replace({_body:a.parse(g.as_unescaped_string())})})})(c.literal_modifiers.string);return c}});caterwaul.module("std.words",function($){var scope_template=$.parse("(function () {var _variables; return (_expression)}).call(this)"),trivial_node_template=$.parse("new caterwaul.syntax(_data)"),nontrivial_node_template=$.parse("new caterwaul.syntax(_data, _xs)");$.words=function(caterwaul_function){$.merge(caterwaul_function.modifiers,$.words.modifiers);$.merge(caterwaul_function.parameterized_modifiers,$.words.parameterized_modifiers);return caterwaul_function};$.syntax_to_expression=function(tree){if(tree.length){for(var comma=new $.syntax(","),i=0,l=tree.length;i<l;++i){comma.push($.syntax_to_expression(tree[i]))}return nontrivial_node_template.replace({_data:'"'+tree.data.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"',_xs:comma.unflatten()})}else{return trivial_node_template.replace({_data:'"'+tree.data.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"'})}};$.words.modifiers={qs:function(match){return new $.expression_ref($.syntax_to_expression(match._expression),"qs")},qse:function(match){return new $.expression_ref($.syntax_to_expression(this(match._expression)),"qse")},reexpand:function(match){return this(this(match._expression))},noexpand:function(match){return match._expression},raise:$.reexpander("(function () {throw _expression}).call(this)"),eval:function(match){return new $.ref($.compile(this(match._expression)),"eval")},delay:$.reexpander("(function (t, f) {return (function () {return f.call(t)})})(this, (function () {return _expression}))"),lazy:$.reexpander("(function (t, f, v, vc) {return (function () {return vc ? v : (vc = true, v = f.call(t))})})(this, (function () {return _expression}))"),capture:function(match){for(var comma=new $.syntax(","),bindings=match._expression.flatten(","),i=0,l=bindings.length;i<l;++i){comma.push(this(bindings[i]).with_data(":"))}return new $.syntax("{",comma.unflatten())},wcapture:function(match){for(var e=this(match._expression),comma=new $.syntax(","),bindings=e.flatten(","),node,i=0,l=bindings.length;i<l;++i){(node=this(bindings[i]))[1]=node[0],comma.push(node.with_data(":"))}return scope_template.replace({_variables:e,_expression:new $.syntax("{",comma.unflatten())})}};$.words.parameterized_modifiers={given:$.reexpander("(function (_parameters) {return _expression})"),bgiven:$.reexpander("(function (t, f) {return (function () {return f.apply(t, arguments)})})(this, (function (_parameters) {return _expression}))"),rescue:$.reexpander("(function () {try {return (_expression)} catch (e) {return (_parameters)}}).call(this)"),se:$.reexpander("(function (it) {return (_parameters), it}).call(this, (_expression))"),re:$.reexpander("(function (it) {return (_parameters)}).call(this, (_expression))"),where:$.reexpander("(function () {var _parameters; return (_expression)}).call(this)"),using:$.reexpander(function(match){var m=this(match._parameters),o=$.compile(m),comma=new $.syntax(","),expression_ref=new $.expression_ref(m);for(var k in o){if(Object.prototype.hasOwnProperty.call(o,k)){comma.push(new $.syntax("=",k,new $.syntax(".",expression_ref,k)))}}return scope_template.replace({_variables:comma.unflatten(),_expression:match._expression})}),when:$.reexpander("((_parameters) && (_expression))"),and:$.reexpander("((_expression) && (_parameters))"),unless:$.reexpander("(! (_parameters) && (_expression))"),or:$.reexpander("((_expression) || (_parameters))")}});caterwaul.module("std.seq","js words",function(a){a.seq(caterwaul_function)=caterwaul_function-se[it.modifiers.seq(match)=seq_expand.call(seq_expand,anon_pattern.replace({_x:match._expression}))-re-this(it)/when.it]-where[anon_pattern=anon("S[_x]"),seq_expand=a(a.alternatives(operator_macros.concat(word_macros)))],where[anon=a.anonymizer("S"),rule(p,e)=a.rereplacer(p.constructor===String?anon(p):p,e.constructor===String?anon(e):e),operator_macros=[rule("S[_x]","_x"),rule("S[_xs + _ys]",concat),rule("S[_xs ^ _ys]",zip),rule("S[_xs - _ys]",cross),rule("S[(_x)]","(S[_x])"),rule("S[_x[_y]]","S[_x][_y]"),rule("S[_xs(_ys)]","S[_xs](_ys)"),rule("S[[_x]]","[_x]"),rule("S[_x, _y]","S[_x], S[_y]"),rule("S[_xs._p]","S[_xs]._p"),rule("S[~[_x]]","[S[_x]]"),rule("S[~_xs(_ys)]","S[_xs](S[_ys])"),rule("S[_x ? _y : _z]","(S[_x]) ? (S[_y]) : (S[_z])"),rule("S[_x && _y]","(S[_x]) && (S[_y])"),rule("S[_x || _y]","(S[_x]) || (S[_y])"),rule("S[+_xs]","Array.prototype.slice.call((_xs))"),rule("S[_xs %_thing]",handle_filter_forms),rule("S[_xs *_thing]",handle_map_forms),rule("S[_xs /_thing]",handle_fold_forms),rule("S[_xs |_thing]",handle_exists_forms),rule("S[_xs %k*_thing]",handle_kmap_forms),rule("S[_xs %v*_thing]",handle_vmap_forms),rule("S[_xs %k%_thing]",handle_kfilter_forms),rule("S[_xs %v%_thing]",handle_vfilter_forms)]-where[unrecognized(reason)=raise[new Error(reason)],use_form(form,xs,body,init,vars)=form?form.replace({_f:body,_init:init}).replace(a.merge({_s:xs},vars)):unrecognized("unsupported sequence operator or modifiers used on #{body}"),operator_case(forms)(match)=parse_modifiers(match._thing,use(forms.normal,forms.inormal),use(forms.bang,forms.ibang),use(forms.tbang,forms.itbang))-where[xs=match._xs,expander=this,form_function(form)(body,vars)=use_form(form,xs,body,null,vars),iform_function(form)(body,init,vars)=use_form(form,xs,body,init,vars),use(form,iform)(body)=parse_body(body,expander,form_function(form),iform_function(iform))],handle_map_forms=operator_case({normal:map,bang:each,tbang:flatmap,itbang:iterate}),handle_filter_forms=operator_case({normal:filter,bang:filter_not,tbang:map_filter,itbang:imap_filter}),handle_fold_forms=operator_case({normal:foldl,bang:foldr,tbang:unfold,inormal:ifoldl,ibang:ifoldr,itbang:iunfold}),handle_kmap_forms=operator_case({normal:kmap,bang:keach}),handle_kfilter_forms=operator_case({normal:kfilter,bang:kfilter_not,tbang:kmap_filter}),handle_vmap_forms=operator_case({normal:vmap,bang:veach}),handle_vfilter_forms=operator_case({normal:vfilter,bang:vfilter_not,tbang:vmap_filter}),handle_exists_forms=operator_case({normal:exists,bang:not_exists}),block=anon("[_x]"),block_with_variable=anon("_var[_x]"),block_with_init=anon("[_init][_x]"),block_with_variable_and_init=anon("_var[_init][_x]"),block_with_closure=anon("+_x"),block_with_seq=anon("~_x"),standard_names={_x:"x",_x0:"x0",_xi:"xi",_xl:"xl",_xs:"xs",_xr:"xr"},prefixed_names(p)={_x:p,_x0:"#{p}0",_xi:"#{p}i",_xl:"#{p}l",_xs:"#{p}s",_xr:"#{p}r"},function_promotion=anon("(_f).call({_x0: _x0, _xi: _xi, _xl: _xl, _xs: _xs, _xr: _xr}, _x)"),promote_function(f)=function_promotion.replace({_f:f}),closure_wrapper=anon("(function (_x, _x0, _xi, _xl, _xs, _xr) {return _f}).call(this, _x, _x0, _xi, _xl, _xs, _xr)"),close_body(vars,f)=closure_wrapper.replace(vars).replace({_f:f}),seq_pattern=anon("S[_x]"),promote_seq(f)=seq_pattern.replace({_x:f}),parse_body(tree,expand,normal,init)=((r=block_with_seq.match(tree))?parse_body(r._x,expand,sequence_context_normal,sequence_context_init):(r=block_with_closure.match(tree))?parse_body(r._x,expand,wrapping_normal,wrapping_init):(r=block_with_variable_and_init.match(tree))?init(r._x,r._init,prefixed_names(r._var)):(r=block_with_init.match(tree))?init(r._x,r._init,standard_names):(r=block_with_variable.match(tree))?normal(r._x,prefixed_names(r._var)):(r=block.match(tree))?normal(r._x,standard_names):normal(promote_function(tree),standard_names))-where[in_sequence_context(f)=expand.call(expand,promote_seq(f)),sequence_context_normal(f,names)=normal(in_sequence_context(f),names),sequence_context_init(f,init_expression,names)=init(in_sequence_context(f),init_expression,names),wrapping_normal(f,names)=normal(close_body(names,f),names),wrapping_init(f,init_expression,names)=init(close_body(names,f),init_expression,names),r=null],tbang_modifier=anon("~!_x"),bang_modifier=anon("!_x"),parse_modifiers(tree,normal,bang,tbang)=((result=tbang_modifier.match(tree))?tbang(result._x):(result=bang_modifier.match(tree))?bang(result._x):normal(tree))-where[result=null]]-where[loop_anon=a.anonymizer("x","y","i","j","l","lj","r","o","k"),scope=anon("(function (_xs) {var _x, _x0, _xi, _xl, _xr; _body}).call(this, S[_s])"),scoped(t)=scope.replace({_body:t}),expand(s)=s.replace(/@/g,"Array.prototype.slice.call").replace(/#/g,"Object.prototype.hasOwnProperty.call").replace(/%%/g,".constructor"),form(x)=x/!expand/!anon/!scoped/!loop_anon,map=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length; _xi < _xl; ++_xi) _x = _xs[_xi], _xr.push((_f));               return _xr"),each=form("for (var                    _xi = 0, _xl = _xs.length; _xi < _xl; ++_xi) _x = _xs[_xi], (_f);                         return _xs"),flatmap=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length; _xi < _xl; ++_xi) _x = _xs[_xi], _xr.push.apply(_xr, @((_f))); return _xr"),iterate=form("for (var _x = _xs, _xi = 0, _x0, _xl;              _x0 = (_init); ++_xi) _x = (_f);                                   return _x"),filter=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length, _x0;     _xi < _xl; ++_xi) _x = _xs[_xi], (_f) && _xr.push(_x);        return _xr"),filter_not=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length, _x0;     _xi < _xl; ++_xi) _x = _xs[_xi], (_f) || _xr.push(_x);        return _xr"),map_filter=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length, _x0, _y; _xi < _xl; ++_xi) _x = _xs[_xi], (_y = (_f)) && _xr.push(_y); return _xr"),imap_filter=form("for (var _xr = new _xs%%(), _xi = 0, _xl = _xs.length, _x0; _xi < _xl; ++_xi) _x = _xs[_xi], (_x0 = (_init)) && _xr.push(_f); return _xr"),foldl=form("for (var _x0 = _xs[0], _xi = 1, _xl = _xs.length;            _xi < _xl; ++_xi) _x = _xs[_xi], _x0 = (_f); return _x0"),foldr=form("for (var _xl = _xs.length, _xi = _xl - 2, _x0 = _xs[_xl - 1]; _xi >= 0; --_xi) _x = _xs[_xi], _x0 = (_f); return _x0"),unfold=form("for (var _xr = [], _x = _xs, _xi = 0;                      _x !== null; ++_xi) _xr.push(_x), _x = (_f);   return _xr"),ifoldl=form("for (var _x0 = (_init), _xi = 0, _xl = _xs.length;      _xi < _xl; ++_xi) _x = _xs[_xi], _x0 = (_f);     return _x0"),ifoldr=form("for (var _xl = _xs.length - 1, _xi = _xl, _x0 = (_init); _xi >= 0; --_xi) _x = _xs[_xi], _x0 = (_f);     return _x0"),iunfold=form("for (var _xr = [], _x = _xs, _xi = 0, _x0;          _x0 = (_init); ++_xi) _xr.push(_x), _x = (_f);       return _xr"),exists=form("for (var _x = _xs[0], _xi = 0, _xl = _xs.length, x; _xi < _xl; ++_xi) {_x = _xs[_xi]; if (x = (_f)) return x} return false"),not_exists=form("for (var _x = _xs[0], _xi = 0, _xl = _xs.length, x; _xi < _xl; ++_xi) {_x = _xs[_xi]; if (x = (_f)) return false} return true"),concat=anon("(S[_xs]).concat((S[_ys]))"),zip=form("for (var _xr = (S[_ys]), pairs = [], i = 0, l = _xs.length; i < l; ++i) pairs.push([_xs[i], _xr[i]]); return pairs"),cross=form("for (var _xr = (S[_ys]), pairs = [], i = 0, l = _xs.length, lj = _xr.length; i < l; ++i) for (var j = 0; j < lj; ++j) pairs.push([_xs[i], _xr[j]]);return pairs"),kmap=form("var _xr = new _xs%%();  for (var _x in _xs) if (#(_xs, _x)) _xr[_f] = _xs[_x]; return _xr"),keach=form("                        for (var _x in _xs) if (#(_xs, _x)) _f;                return _xs"),kfilter=form("var _xr = new _xs%%();    for (var _x in _xs) if (#(_xs, _x) &&      (_f))  _xr[_x] = _xs[_x]; return _xr"),kfilter_not=form("var _xr = new _xs%%();    for (var _x in _xs) if (#(_xs, _x) &&    ! (_f))  _xr[_x] = _xs[_x]; return _xr"),kmap_filter=form("var _xr = new _xs%%(), x; for (var _x in _xs) if (#(_xs, _x) && (x = (_f))) _xr[x]  = _xs[_x]; return _xr"),vmap=form("var _xr = new _xs%%();    for (var  k in _xs) if (#(_xs, k)) _x = _xs[k], _xr[k] = (_f); return _xr"),veach=form("                          for (var  k in _xs) if (#(_xs, k)) _x = _xs[k], _f;            return _xs"),vfilter=form("var _xr = new _xs%%();    for (var  k in _xs) if (#(_xs, k)) _x = _xs[k],        (_f) && (_xr[k] = _x); return _xr"),vfilter_not=form("var _xr = new _xs%%();    for (var  k in _xs) if (#(_xs, k)) _x = _xs[k],        (_f) || (_xr[k] = _x); return _xr"),vmap_filter=form("var _xr = new _xs%%(), x; for (var  k in _xs) if (#(_xs, k)) _x = _xs[k], x = (_f), x && (_xr[k] =  x); return _xr")],word_macros=[rule("S[n[_upper]]",n),rule("S[ni[_upper]]",ni),rule("S[_o /keys]",keys),rule("S[_o |object]",object),rule("S[n[_lower, _upper]]",n),rule("S[ni[_lower, _upper]]",ni),rule("S[_o /values]",values),rule("S[_o -object]",object),rule("S[n[_lower, _upper, _step]]",n),rule("S[ni[_lower, _upper, _step]]",ni),rule("S[_o /pairs]",pairs),rule("S[_o /object]",object)]-where[n(match)=n_pattern.replace(a.merge({_lower:"0",_step:"1"},match)),ni(match)=ni_pattern.replace(a.merge({_lower:"0",_step:"1"},match)),n_pattern=anon("(function (i, u, s) {if ((u - i) * s <= 0) return [];for (var r = [], d = u - i; d > 0 ? i <  u : i >  u; i += s) r.push(i); return r})((_lower), (_upper), (_step))"),ni_pattern=anon("(function (i, u, s) {if ((u - i) * s <= 0) return [];for (var r = [], d = u - i; d > 0 ? i <= u : i >= u; i += s) r.push(i); return r})((_lower), (_upper), (_step))"),scope=anon("(function (o) {_body}).call(this, (S[_o]))"),scoped(t)=scope.replace({_body:t}),form(p)=tree.replace(match)-given.match-where[tree=scoped(anon(p))],keys=form("var ks = []; for (var k in o) Object.prototype.hasOwnProperty.call(o, k) && ks.push(k); return ks"),values=form("var vs = []; for (var k in o) Object.prototype.hasOwnProperty.call(o, k) && vs.push(o[k]); return vs"),pairs=form("var ps = []; for (var k in o) Object.prototype.hasOwnProperty.call(o, k) && ps.push([k, o[k]]); return ps"),object=form("for (var r = {}, i = 0, l = o.length, x; i < l; ++i) x = o[i], r[x[0]] = x[1]; return r")]]});caterwaul.module("std",function(a){a.js_all=function(){return this.seq(this.words(this.js_literals(this.js())))}});
caterwaul.module("ui.jquery","js words",function(a){a.jquery(caterwaul_function)=caterwaul_function-se[it.modifiers.jquery(match)=jquery_expand.call(jquery_expand,anon_pattern.replace({_x:match._expression}))-re-this(it)/when.it]-where[anon_pattern=anon("J[_x]"),jquery_expand=a(a.alternatives(jquery_macros.concat(string_macros).concat(search_macros)))],where[jq="jQuery",anon=a.anonymizer("J","TS","S","P","PS"),hyphenate(s)=s.replace(/_/g,"-"),rule(p,e)=a.rereplacer(anon(p),e.constructor===Function?e.call(this,match)-given.match:anon(e)),p=where[p_pattern=anon("P[_thing]")] in p_pattern.replace({_thing:node})-given.node,jquery_macros=[rule("J[_element]",given.match[match._element.is_constant()||match._element.length?wrap_in_jquery(match):become_dom_node(match)]),rule("J[_element._class]","J[_element].addClass(S[_class])"),rule("J[_element *_attr(_val)]","J[_element].attr(S[_attr], _val)"),rule("J[_element *!_name(_val)]","J[_element].data(S[_name], _val)"),rule("J[_element /_method(_args)]","J[_element]._method(_args)"),rule("J[_element /!_event(_args)]","J[_element].bind(S[_event], _args)"),rule("J[_element %_function]","_function(J[_element])"),rule("J[_element(_children)]","J[_element].append(J[_children])"),rule("J[_element[_children]]","J[_element].append(_children)"),rule("J[_element < _tree]","J[_element].append((_tree).toString())"),rule("J[_element > _child]","J[_element].append(J[_child])"),rule("J[_element >= _child]","J[_element].append(_child)"),rule("J[_element1, _element2]","J[_element1].add(J[_element2])"),rule("J[_element1 + _element2]","J[_element1].add(J[_element2])"),rule("J[_element >> _pattern]","J[_element].filter(PS[_pattern])"),rule("J[_element >>> _pattern]","J[_element].find(PS[_pattern])"),rule("J[_element << _pattern]","J[_element].parents(PS[_pattern])"),rule("J[(_element)]","(J[_element])"),rule("J[[_element]]","[J[_element]]"),rule("J[+_expression]","_expression")]-where[dom_node_template=anon("#{jq}(TS[_element])"),jquery_template=anon('#{jq}("<span>" + (_element) + "</span>")'),become_dom_node(match)=dom_node_template.replace(match),wrap_in_jquery(match)=jquery_template.replace(match)],string_macros=[rule("TS[_identifier]",string("<#{hyphenate(match._identifier.data)}>")-given.match),rule("S[_identifier]",string(hyphenate(match._identifier.data))-given.match),rule("PS[_identifier]",string(expand(p(match._identifier)).data)-given.match)]-where[string(s)=new a.syntax('"'+s.replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"')],search_macros=[rule("P[_element]",new a.syntax(hyphenate(match._element.data-re[it==="_"?"*":it]))-given.match),rule("P[_element._class]",new a.syntax("#{this(p(match._element)).data}.#{hyphenate(match._class.data)}")-given.match),rule("P[_element[_attributes]]",new a.syntax("#{this(p(match._element)).data}[#{this(p(match._attributes))}]")-given.match),rule("P[_attribute = _value]",new a.syntax('#{this(p(match._attribute)).data}="#{'+interpolated(match._value)+'}"')-given.match),rule("P[(_element)]","P[_element]"),rule("P[_element1 +   _element2]",binary(", ")),rule("P[_element1,    _element2]",binary(", ")),rule("P[_element1 >>  _element2]",binary(" ")),rule("P[_element1 >>> _element2]",binary(" ")),rule("P[_element1 >   _element2]",binary(" > ")),rule("P[_element1(_element2)]",binary(" > ")),rule("P[_element /_selector]",new a.syntax("#{expand(p(match._element)).data}:#{hyphenate(match._selector.data)}")-given.match),rule("P[_element /_selector(_value)]",new a.syntax('#{expand(p(match._element)).data}:#{hyphenate(match._selector.data)}("#{'+interpolated(match._value)+'}")')-given.match)]-where[interpolated(node)='(#{node.toString()}).replace(/(\\)/g, "$1$1").replace(/(")/g, "\\$1")',binary(op)(match)=new a.syntax("#{expand(p(match._element1)).data}#{op}#{expand(p(match._element2)).data}")]]});

caterwaul('js_all')(function ($) {
  options.input_files *!waul -seq
  -where [fs                         = require('fs'),
          options                    = {extensions: [], input_files: [], use_std: true, compile: ! /waulrun$/.test(process.argv[1])}
                                       -se [it.input_files = [process.argv[2]], unless [it.compile]]
                                       -se- process.argv.slice(2) *![x === '--extension' ? it.extensions /~push/ xs[++xi]              :
                                                                     x === '--run'       ? it.compile = !(it.input_files = [xs[++xi]]) :
                                                                     x === '--no-std'    ? it.use_std = false                          : it.input_files /~push/ x -when- it.compile] /seq,

          build_caterwaul            = $()('(function () {' + $.replicator({core_only: !options.use_std}) +
                                                          options.extensions *[fs.readFileSync(x, 'utf8')] /seq /re [it.join(';\n') + ';\nreturn caterwaul.deglobalize()})']),

          waul(file)                 = options.compile ? fs.writeFileSync(file.replace(/\.waul$/, '.js'), waul_transform(fs.readFileSync(file, 'utf8') /!$.parse).toString(), 'utf8')
                                                       : waul_run(fs.readFileSync(file, 'utf8') /!$.parse),

          waul_transform(tree)       = flat[1] / flat[2] /-toplevel/ flat[3] -where [flat = tree[0].flatten('()')],
          waul_run(tree)             = caterwaul.compile(tree[0], {require: require, caterwaul: caterwaul}) -where [caterwaul = build_caterwaul()],

          toplevel(conf, tree, args) = caterwaul(conf.as_escaped_string())(tree) -re- qs[(_x)(_y)] /~replace/ {_x: it /!caterwaul.late_bound_tree, _y: args}
                               -where [caterwaul = build_caterwaul()]]}, {require: require})(caterwaul);

// Generated by SDoc 
